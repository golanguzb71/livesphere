// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.12.4
// source: violation.proto

package event_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListViolationLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32                   `protobuf:"varint,1,opt,name=count,proto3" json:"count"`
	Items []*ViolationLogResponse `protobuf:"bytes,2,rep,name=items,proto3" json:"items"`
}

func (x *ListViolationLog) Reset() {
	*x = ListViolationLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_violation_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListViolationLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListViolationLog) ProtoMessage() {}

func (x *ListViolationLog) ProtoReflect() protoreflect.Message {
	mi := &file_violation_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListViolationLog.ProtoReflect.Descriptor instead.
func (*ListViolationLog) Descriptor() ([]byte, []int) {
	return file_violation_proto_rawDescGZIP(), []int{0}
}

func (x *ListViolationLog) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ListViolationLog) GetItems() []*ViolationLogResponse {
	if x != nil {
		return x.Items
	}
	return nil
}

type ViolationFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page         int32  `protobuf:"varint,1,opt,name=page,proto3" json:"page"`
	Limit        int32  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit"`
	Timezone     string `protobuf:"bytes,3,opt,name=timezone,proto3" json:"timezone"`
	DriverId     string `protobuf:"bytes,4,opt,name=driver_id,json=driverId,proto3" json:"driver_id"`
	Date         string `protobuf:"bytes,5,opt,name=date,proto3" json:"date"`
	ViolationKey string `protobuf:"bytes,6,opt,name=violation_key,json=violationKey,proto3" json:"violation_key"`
	CompanyId    string `protobuf:"bytes,7,opt,name=company_id,json=companyId,proto3" json:"company_id"`
}

func (x *ViolationFilter) Reset() {
	*x = ViolationFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_violation_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViolationFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViolationFilter) ProtoMessage() {}

func (x *ViolationFilter) ProtoReflect() protoreflect.Message {
	mi := &file_violation_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViolationFilter.ProtoReflect.Descriptor instead.
func (*ViolationFilter) Descriptor() ([]byte, []int) {
	return file_violation_proto_rawDescGZIP(), []int{1}
}

func (x *ViolationFilter) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ViolationFilter) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ViolationFilter) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

func (x *ViolationFilter) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *ViolationFilter) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *ViolationFilter) GetViolationKey() string {
	if x != nil {
		return x.ViolationKey
	}
	return ""
}

func (x *ViolationFilter) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

type ViolationLogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	IncrementId   int64    `protobuf:"varint,2,opt,name=increment_id,json=incrementId,proto3" json:"increment_id"`
	EventType     int32    `protobuf:"varint,3,opt,name=event_type,json=eventType,proto3" json:"event_type"`
	EventCode     int32    `protobuf:"varint,4,opt,name=event_code,json=eventCode,proto3" json:"event_code"`
	OriginCode    int32    `protobuf:"varint,5,opt,name=origin_code,json=originCode,proto3" json:"origin_code"`
	CompanyId     string   `protobuf:"bytes,6,opt,name=company_id,json=companyId,proto3" json:"company_id"`
	DriverId      string   `protobuf:"bytes,7,opt,name=driver_id,json=driverId,proto3" json:"driver_id"`
	DriverName    string   `protobuf:"bytes,8,opt,name=driver_name,json=driverName,proto3" json:"driver_name"`
	Address       *Address `protobuf:"bytes,9,opt,name=address,proto3" json:"address"`
	Odometer      float32  `protobuf:"fixed32,10,opt,name=odometer,proto3" json:"odometer"`
	EngineHours   float32  `protobuf:"fixed32,11,opt,name=engine_hours,json=engineHours,proto3" json:"engine_hours"`
	EldAddress    string   `protobuf:"bytes,12,opt,name=eld_address,json=eldAddress,proto3" json:"eld_address"`
	Status        string   `protobuf:"bytes,13,opt,name=status,proto3" json:"status"`
	Creator       string   `protobuf:"bytes,14,opt,name=creator,proto3" json:"creator"`
	DriverSign    string   `protobuf:"bytes,15,opt,name=driver_sign,json=driverSign,proto3" json:"driver_sign"`
	CertifyTime   string   `protobuf:"bytes,16,opt,name=certify_time,json=certifyTime,proto3" json:"certify_time"`
	StartTime     string   `protobuf:"bytes,17,opt,name=start_time,json=startTime,proto3" json:"start_time"`
	EndTime       string   `protobuf:"bytes,18,opt,name=end_time,json=endTime,proto3" json:"end_time"`
	CreatedAt     string   `protobuf:"bytes,19,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt     string   `protobuf:"bytes,20,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
	ViolationKey  string   `protobuf:"bytes,21,opt,name=violation_key,json=violationKey,proto3" json:"violation_key"`
	ViolationName string   `protobuf:"bytes,22,opt,name=violation_name,json=violationName,proto3" json:"violation_name"`
	LogId         string   `protobuf:"bytes,23,opt,name=log_id,json=logId,proto3" json:"log_id"`
}

func (x *ViolationLogResponse) Reset() {
	*x = ViolationLogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_violation_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViolationLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViolationLogResponse) ProtoMessage() {}

func (x *ViolationLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_violation_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViolationLogResponse.ProtoReflect.Descriptor instead.
func (*ViolationLogResponse) Descriptor() ([]byte, []int) {
	return file_violation_proto_rawDescGZIP(), []int{2}
}

func (x *ViolationLogResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ViolationLogResponse) GetIncrementId() int64 {
	if x != nil {
		return x.IncrementId
	}
	return 0
}

func (x *ViolationLogResponse) GetEventType() int32 {
	if x != nil {
		return x.EventType
	}
	return 0
}

func (x *ViolationLogResponse) GetEventCode() int32 {
	if x != nil {
		return x.EventCode
	}
	return 0
}

func (x *ViolationLogResponse) GetOriginCode() int32 {
	if x != nil {
		return x.OriginCode
	}
	return 0
}

func (x *ViolationLogResponse) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *ViolationLogResponse) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *ViolationLogResponse) GetDriverName() string {
	if x != nil {
		return x.DriverName
	}
	return ""
}

func (x *ViolationLogResponse) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *ViolationLogResponse) GetOdometer() float32 {
	if x != nil {
		return x.Odometer
	}
	return 0
}

func (x *ViolationLogResponse) GetEngineHours() float32 {
	if x != nil {
		return x.EngineHours
	}
	return 0
}

func (x *ViolationLogResponse) GetEldAddress() string {
	if x != nil {
		return x.EldAddress
	}
	return ""
}

func (x *ViolationLogResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ViolationLogResponse) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *ViolationLogResponse) GetDriverSign() string {
	if x != nil {
		return x.DriverSign
	}
	return ""
}

func (x *ViolationLogResponse) GetCertifyTime() string {
	if x != nil {
		return x.CertifyTime
	}
	return ""
}

func (x *ViolationLogResponse) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *ViolationLogResponse) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *ViolationLogResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *ViolationLogResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *ViolationLogResponse) GetViolationKey() string {
	if x != nil {
		return x.ViolationKey
	}
	return ""
}

func (x *ViolationLogResponse) GetViolationName() string {
	if x != nil {
		return x.ViolationName
	}
	return ""
}

func (x *ViolationLogResponse) GetLogId() string {
	if x != nil {
		return x.LogId
	}
	return ""
}

var File_violation_proto protoreflect.FileDescriptor

var file_violation_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x76, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0d, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x1a, 0x0e, 0x65, 0x6c, 0x64, 0x5f, 0x6c, 0x6f, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x63, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x6f, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x56, 0x69, 0x6f, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xcc, 0x01, 0x0a, 0x0f, 0x56, 0x69, 0x6f, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x76, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x49, 0x64, 0x22, 0xe8, 0x05, 0x0a, 0x14, 0x56, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x64,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x6f, 0x64, 0x6f, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x08, 0x6f, 0x64, 0x6f, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0b, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x1f, 0x0a,
	0x0b, 0x65, 0x6c, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x65, 0x6c, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x67,
	0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x79,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x23, 0x0a, 0x0d,
	0x76, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65,
	0x79, 0x12, 0x25, 0x0a, 0x0e, 0x76, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x76, 0x69, 0x6f, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6c, 0x6f, 0x67, 0x5f,
	0x69, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x42,
	0x18, 0x5a, 0x16, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_violation_proto_rawDescOnce sync.Once
	file_violation_proto_rawDescData = file_violation_proto_rawDesc
)

func file_violation_proto_rawDescGZIP() []byte {
	file_violation_proto_rawDescOnce.Do(func() {
		file_violation_proto_rawDescData = protoimpl.X.CompressGZIP(file_violation_proto_rawDescData)
	})
	return file_violation_proto_rawDescData
}

var file_violation_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_violation_proto_goTypes = []any{
	(*ListViolationLog)(nil),     // 0: event_service.ListViolationLog
	(*ViolationFilter)(nil),      // 1: event_service.ViolationFilter
	(*ViolationLogResponse)(nil), // 2: event_service.ViolationLogResponse
	(*Address)(nil),              // 3: event_service.Address
}
var file_violation_proto_depIdxs = []int32{
	2, // 0: event_service.ListViolationLog.items:type_name -> event_service.ViolationLogResponse
	3, // 1: event_service.ViolationLogResponse.address:type_name -> event_service.Address
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_violation_proto_init() }
func file_violation_proto_init() {
	if File_violation_proto != nil {
		return
	}
	file_eld_logs_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_violation_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ListViolationLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_violation_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ViolationFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_violation_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ViolationLogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_violation_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_violation_proto_goTypes,
		DependencyIndexes: file_violation_proto_depIdxs,
		MessageInfos:      file_violation_proto_msgTypes,
	}.Build()
	File_violation_proto = out.File
	file_violation_proto_rawDesc = nil
	file_violation_proto_goTypes = nil
	file_violation_proto_depIdxs = nil
}
