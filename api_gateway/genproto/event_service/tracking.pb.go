// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.12.4
// source: tracking.proto

package event_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Location struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lat     float32 `protobuf:"fixed32,1,opt,name=lat,proto3" json:"lat"`
	Long    float32 `protobuf:"fixed32,2,opt,name=long,proto3" json:"long"`
	Address string  `protobuf:"bytes,3,opt,name=address,proto3" json:"address"`
	State   string  `protobuf:"bytes,4,opt,name=state,proto3" json:"state"`
}

func (x *Location) Reset() {
	*x = Location{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracking_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Location) ProtoMessage() {}

func (x *Location) ProtoReflect() protoreflect.Message {
	mi := &file_tracking_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Location.ProtoReflect.Descriptor instead.
func (*Location) Descriptor() ([]byte, []int) {
	return file_tracking_proto_rawDescGZIP(), []int{0}
}

func (x *Location) GetLat() float32 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *Location) GetLong() float32 {
	if x != nil {
		return x.Long
	}
	return 0
}

func (x *Location) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Location) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type EldInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VinNumber           string  `protobuf:"bytes,1,opt,name=vin_number,json=vinNumber,proto3" json:"vin_number"`
	EldConnection       bool    `protobuf:"varint,2,opt,name=eld_connection,json=eldConnection,proto3" json:"eld_connection"`
	Speed               int32   `protobuf:"varint,3,opt,name=speed,proto3" json:"speed"`
	Odometer            float32 `protobuf:"fixed32,4,opt,name=odometer,proto3" json:"odometer"`
	EngineHours         float32 `protobuf:"fixed32,5,opt,name=engine_hours,json=engineHours,proto3" json:"engine_hours"`
	FuelPercent         int32   `protobuf:"varint,6,opt,name=fuel_percent,json=fuelPercent,proto3" json:"fuel_percent"`
	DefLevelPercent     int32   `protobuf:"varint,7,opt,name=def_level_percent,json=defLevelPercent,proto3" json:"def_level_percent"`
	Bus                 string  `protobuf:"bytes,8,opt,name=bus,proto3" json:"bus"`
	CoolantLevelPercent int32   `protobuf:"varint,9,opt,name=coolant_level_percent,json=coolantLevelPercent,proto3" json:"coolant_level_percent"`
	CoolantTemprature   int32   `protobuf:"varint,10,opt,name=coolant_temprature,json=coolantTemprature,proto3" json:"coolant_temprature"`
	OilLevelPercent     int32   `protobuf:"varint,11,opt,name=oil_level_percent,json=oilLevelPercent,proto3" json:"oil_level_percent"`
	OilTemprature       int32   `protobuf:"varint,12,opt,name=oil_temprature,json=oilTemprature,proto3" json:"oil_temprature"`
	LastUpdatedAt       int32   `protobuf:"varint,13,opt,name=last_updated_at,json=lastUpdatedAt,proto3" json:"last_updated_at"`
}

func (x *EldInfo) Reset() {
	*x = EldInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracking_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EldInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EldInfo) ProtoMessage() {}

func (x *EldInfo) ProtoReflect() protoreflect.Message {
	mi := &file_tracking_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EldInfo.ProtoReflect.Descriptor instead.
func (*EldInfo) Descriptor() ([]byte, []int) {
	return file_tracking_proto_rawDescGZIP(), []int{1}
}

func (x *EldInfo) GetVinNumber() string {
	if x != nil {
		return x.VinNumber
	}
	return ""
}

func (x *EldInfo) GetEldConnection() bool {
	if x != nil {
		return x.EldConnection
	}
	return false
}

func (x *EldInfo) GetSpeed() int32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *EldInfo) GetOdometer() float32 {
	if x != nil {
		return x.Odometer
	}
	return 0
}

func (x *EldInfo) GetEngineHours() float32 {
	if x != nil {
		return x.EngineHours
	}
	return 0
}

func (x *EldInfo) GetFuelPercent() int32 {
	if x != nil {
		return x.FuelPercent
	}
	return 0
}

func (x *EldInfo) GetDefLevelPercent() int32 {
	if x != nil {
		return x.DefLevelPercent
	}
	return 0
}

func (x *EldInfo) GetBus() string {
	if x != nil {
		return x.Bus
	}
	return ""
}

func (x *EldInfo) GetCoolantLevelPercent() int32 {
	if x != nil {
		return x.CoolantLevelPercent
	}
	return 0
}

func (x *EldInfo) GetCoolantTemprature() int32 {
	if x != nil {
		return x.CoolantTemprature
	}
	return 0
}

func (x *EldInfo) GetOilLevelPercent() int32 {
	if x != nil {
		return x.OilLevelPercent
	}
	return 0
}

func (x *EldInfo) GetOilTemprature() int32 {
	if x != nil {
		return x.OilTemprature
	}
	return 0
}

func (x *EldInfo) GetLastUpdatedAt() int32 {
	if x != nil {
		return x.LastUpdatedAt
	}
	return 0
}

type TrackingCreateRequestItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Location    *Location `protobuf:"bytes,2,opt,name=location,proto3" json:"location"`
	EldInfo     *EldInfo  `protobuf:"bytes,3,opt,name=eld_info,json=eldInfo,proto3" json:"eld_info"`
	DebugData   string    `protobuf:"bytes,4,opt,name=debug_data,json=debugData,proto3" json:"debug_data"`
	CreatedTime string    `protobuf:"bytes,5,opt,name=created_time,json=createdTime,proto3" json:"created_time"`
}

func (x *TrackingCreateRequestItem) Reset() {
	*x = TrackingCreateRequestItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracking_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackingCreateRequestItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackingCreateRequestItem) ProtoMessage() {}

func (x *TrackingCreateRequestItem) ProtoReflect() protoreflect.Message {
	mi := &file_tracking_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackingCreateRequestItem.ProtoReflect.Descriptor instead.
func (*TrackingCreateRequestItem) Descriptor() ([]byte, []int) {
	return file_tracking_proto_rawDescGZIP(), []int{2}
}

func (x *TrackingCreateRequestItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TrackingCreateRequestItem) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *TrackingCreateRequestItem) GetEldInfo() *EldInfo {
	if x != nil {
		return x.EldInfo
	}
	return nil
}

func (x *TrackingCreateRequestItem) GetDebugData() string {
	if x != nil {
		return x.DebugData
	}
	return ""
}

func (x *TrackingCreateRequestItem) GetCreatedTime() string {
	if x != nil {
		return x.CreatedTime
	}
	return ""
}

type TrackingCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DriverId  string                       `protobuf:"bytes,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id"`
	UnitId    string                       `protobuf:"bytes,2,opt,name=unit_id,json=unitId,proto3" json:"unit_id"`
	CompanyId string                       `protobuf:"bytes,3,opt,name=company_id,json=companyId,proto3" json:"company_id"`
	Items     []*TrackingCreateRequestItem `protobuf:"bytes,4,rep,name=items,proto3" json:"items"`
}

func (x *TrackingCreateRequest) Reset() {
	*x = TrackingCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracking_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackingCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackingCreateRequest) ProtoMessage() {}

func (x *TrackingCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tracking_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackingCreateRequest.ProtoReflect.Descriptor instead.
func (*TrackingCreateRequest) Descriptor() ([]byte, []int) {
	return file_tracking_proto_rawDescGZIP(), []int{3}
}

func (x *TrackingCreateRequest) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *TrackingCreateRequest) GetUnitId() string {
	if x != nil {
		return x.UnitId
	}
	return ""
}

func (x *TrackingCreateRequest) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *TrackingCreateRequest) GetItems() []*TrackingCreateRequestItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type Tracking struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	DriverId      string    `protobuf:"bytes,2,opt,name=driver_id,json=driverId,proto3" json:"driver_id"`
	UnitId        string    `protobuf:"bytes,3,opt,name=unit_id,json=unitId,proto3" json:"unit_id"`
	CompanyId     string    `protobuf:"bytes,4,opt,name=company_id,json=companyId,proto3" json:"company_id"`
	Location      *Location `protobuf:"bytes,5,opt,name=location,proto3" json:"location"`
	Speed         int32     `protobuf:"varint,6,opt,name=speed,proto3" json:"speed"`
	Odometer      float32   `protobuf:"fixed32,7,opt,name=odometer,proto3" json:"odometer"`
	EngineHours   float32   `protobuf:"fixed32,8,opt,name=engine_hours,json=engineHours,proto3" json:"engine_hours"`
	FuelPercent   int32     `protobuf:"varint,9,opt,name=fuel_percent,json=fuelPercent,proto3" json:"fuel_percent"`
	EldConnection bool      `protobuf:"varint,10,opt,name=eld_connection,json=eldConnection,proto3" json:"eld_connection"`
	VinNumber     string    `protobuf:"bytes,11,opt,name=vin_number,json=vinNumber,proto3" json:"vin_number"`
	CreatedTime   string    `protobuf:"bytes,12,opt,name=created_time,json=createdTime,proto3" json:"created_time"`
	DebugData     string    `protobuf:"bytes,13,opt,name=debug_data,json=debugData,proto3" json:"debug_data"`
	CreatedAt     string    `protobuf:"bytes,14,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
}

func (x *Tracking) Reset() {
	*x = Tracking{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracking_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tracking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tracking) ProtoMessage() {}

func (x *Tracking) ProtoReflect() protoreflect.Message {
	mi := &file_tracking_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tracking.ProtoReflect.Descriptor instead.
func (*Tracking) Descriptor() ([]byte, []int) {
	return file_tracking_proto_rawDescGZIP(), []int{4}
}

func (x *Tracking) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Tracking) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *Tracking) GetUnitId() string {
	if x != nil {
		return x.UnitId
	}
	return ""
}

func (x *Tracking) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *Tracking) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *Tracking) GetSpeed() int32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *Tracking) GetOdometer() float32 {
	if x != nil {
		return x.Odometer
	}
	return 0
}

func (x *Tracking) GetEngineHours() float32 {
	if x != nil {
		return x.EngineHours
	}
	return 0
}

func (x *Tracking) GetFuelPercent() int32 {
	if x != nil {
		return x.FuelPercent
	}
	return 0
}

func (x *Tracking) GetEldConnection() bool {
	if x != nil {
		return x.EldConnection
	}
	return false
}

func (x *Tracking) GetVinNumber() string {
	if x != nil {
		return x.VinNumber
	}
	return ""
}

func (x *Tracking) GetCreatedTime() string {
	if x != nil {
		return x.CreatedTime
	}
	return ""
}

func (x *Tracking) GetDebugData() string {
	if x != nil {
		return x.DebugData
	}
	return ""
}

func (x *Tracking) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type TrackingLight struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Lat         float32 `protobuf:"fixed32,2,opt,name=lat,proto3" json:"lat"`
	Long        float32 `protobuf:"fixed32,3,opt,name=long,proto3" json:"long"`
	CreatedAt   string  `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	CreatedTime string  `protobuf:"bytes,5,opt,name=created_time,json=createdTime,proto3" json:"created_time"`
	Title       string  `protobuf:"bytes,6,opt,name=title,proto3" json:"title"`
}

func (x *TrackingLight) Reset() {
	*x = TrackingLight{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracking_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackingLight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackingLight) ProtoMessage() {}

func (x *TrackingLight) ProtoReflect() protoreflect.Message {
	mi := &file_tracking_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackingLight.ProtoReflect.Descriptor instead.
func (*TrackingLight) Descriptor() ([]byte, []int) {
	return file_tracking_proto_rawDescGZIP(), []int{5}
}

func (x *TrackingLight) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TrackingLight) GetLat() float32 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *TrackingLight) GetLong() float32 {
	if x != nil {
		return x.Long
	}
	return 0
}

func (x *TrackingLight) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *TrackingLight) GetCreatedTime() string {
	if x != nil {
		return x.CreatedTime
	}
	return ""
}

func (x *TrackingLight) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type Stop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	DriverId      string    `protobuf:"bytes,2,opt,name=driver_id,json=driverId,proto3" json:"driver_id"`
	UnitId        string    `protobuf:"bytes,3,opt,name=unit_id,json=unitId,proto3" json:"unit_id"`
	CompanyId     string    `protobuf:"bytes,4,opt,name=company_id,json=companyId,proto3" json:"company_id"`
	Location      *Location `protobuf:"bytes,5,opt,name=location,proto3" json:"location"`
	Speed         int32     `protobuf:"varint,6,opt,name=speed,proto3" json:"speed"`
	Odometer      float32   `protobuf:"fixed32,7,opt,name=odometer,proto3" json:"odometer"`
	EngineHours   float32   `protobuf:"fixed32,8,opt,name=engine_hours,json=engineHours,proto3" json:"engine_hours"`
	FuelPercent   int32     `protobuf:"varint,9,opt,name=fuel_percent,json=fuelPercent,proto3" json:"fuel_percent"`
	EldConnection bool      `protobuf:"varint,10,opt,name=eld_connection,json=eldConnection,proto3" json:"eld_connection"`
	VinNumber     string    `protobuf:"bytes,11,opt,name=vin_number,json=vinNumber,proto3" json:"vin_number"`
	IsClosed      bool      `protobuf:"varint,12,opt,name=is_closed,json=isClosed,proto3" json:"is_closed"`
	StartTime     string    `protobuf:"bytes,13,opt,name=start_time,json=startTime,proto3" json:"start_time"`
	EndTime       string    `protobuf:"bytes,14,opt,name=end_time,json=endTime,proto3" json:"end_time"`
	DebugData     string    `protobuf:"bytes,15,opt,name=debug_data,json=debugData,proto3" json:"debug_data"`
	CreatedAt     string    `protobuf:"bytes,16,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
}

func (x *Stop) Reset() {
	*x = Stop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracking_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stop) ProtoMessage() {}

func (x *Stop) ProtoReflect() protoreflect.Message {
	mi := &file_tracking_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stop.ProtoReflect.Descriptor instead.
func (*Stop) Descriptor() ([]byte, []int) {
	return file_tracking_proto_rawDescGZIP(), []int{6}
}

func (x *Stop) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Stop) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *Stop) GetUnitId() string {
	if x != nil {
		return x.UnitId
	}
	return ""
}

func (x *Stop) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *Stop) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *Stop) GetSpeed() int32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *Stop) GetOdometer() float32 {
	if x != nil {
		return x.Odometer
	}
	return 0
}

func (x *Stop) GetEngineHours() float32 {
	if x != nil {
		return x.EngineHours
	}
	return 0
}

func (x *Stop) GetFuelPercent() int32 {
	if x != nil {
		return x.FuelPercent
	}
	return 0
}

func (x *Stop) GetEldConnection() bool {
	if x != nil {
		return x.EldConnection
	}
	return false
}

func (x *Stop) GetVinNumber() string {
	if x != nil {
		return x.VinNumber
	}
	return ""
}

func (x *Stop) GetIsClosed() bool {
	if x != nil {
		return x.IsClosed
	}
	return false
}

func (x *Stop) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *Stop) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *Stop) GetDebugData() string {
	if x != nil {
		return x.DebugData
	}
	return ""
}

func (x *Stop) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type TrackingListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Trackings []*Tracking `protobuf:"bytes,1,rep,name=trackings,proto3" json:"trackings"`
	Stops     []*Stop     `protobuf:"bytes,2,rep,name=stops,proto3" json:"stops"`
}

func (x *TrackingListResponse) Reset() {
	*x = TrackingListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracking_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackingListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackingListResponse) ProtoMessage() {}

func (x *TrackingListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tracking_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackingListResponse.ProtoReflect.Descriptor instead.
func (*TrackingListResponse) Descriptor() ([]byte, []int) {
	return file_tracking_proto_rawDescGZIP(), []int{7}
}

func (x *TrackingListResponse) GetTrackings() []*Tracking {
	if x != nil {
		return x.Trackings
	}
	return nil
}

func (x *TrackingListResponse) GetStops() []*Stop {
	if x != nil {
		return x.Stops
	}
	return nil
}

type TrackingListLightResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Trackings []*TrackingLight `protobuf:"bytes,1,rep,name=trackings,proto3" json:"trackings"`
	Stops     []*Stop          `protobuf:"bytes,2,rep,name=stops,proto3" json:"stops"`
}

func (x *TrackingListLightResponse) Reset() {
	*x = TrackingListLightResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracking_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackingListLightResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackingListLightResponse) ProtoMessage() {}

func (x *TrackingListLightResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tracking_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackingListLightResponse.ProtoReflect.Descriptor instead.
func (*TrackingListLightResponse) Descriptor() ([]byte, []int) {
	return file_tracking_proto_rawDescGZIP(), []int{8}
}

func (x *TrackingListLightResponse) GetTrackings() []*TrackingLight {
	if x != nil {
		return x.Trackings
	}
	return nil
}

func (x *TrackingListLightResponse) GetStops() []*Stop {
	if x != nil {
		return x.Stops
	}
	return nil
}

type TrackingListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DriverId  string `protobuf:"bytes,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id"`
	UnitId    string `protobuf:"bytes,2,opt,name=unit_id,json=unitId,proto3" json:"unit_id"`
	StartTime string `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time"`
	EndTime   string `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3" json:"end_time"`
}

func (x *TrackingListRequest) Reset() {
	*x = TrackingListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracking_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackingListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackingListRequest) ProtoMessage() {}

func (x *TrackingListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tracking_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackingListRequest.ProtoReflect.Descriptor instead.
func (*TrackingListRequest) Descriptor() ([]byte, []int) {
	return file_tracking_proto_rawDescGZIP(), []int{9}
}

func (x *TrackingListRequest) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *TrackingListRequest) GetUnitId() string {
	if x != nil {
		return x.UnitId
	}
	return ""
}

func (x *TrackingListRequest) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *TrackingListRequest) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

type DailyTrackingListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DriverId string `protobuf:"bytes,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id"`
	UnitId   string `protobuf:"bytes,2,opt,name=unit_id,json=unitId,proto3" json:"unit_id"`
	Date     string `protobuf:"bytes,4,opt,name=date,proto3" json:"date"`
}

func (x *DailyTrackingListRequest) Reset() {
	*x = DailyTrackingListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracking_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DailyTrackingListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DailyTrackingListRequest) ProtoMessage() {}

func (x *DailyTrackingListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tracking_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DailyTrackingListRequest.ProtoReflect.Descriptor instead.
func (*DailyTrackingListRequest) Descriptor() ([]byte, []int) {
	return file_tracking_proto_rawDescGZIP(), []int{10}
}

func (x *DailyTrackingListRequest) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *DailyTrackingListRequest) GetUnitId() string {
	if x != nil {
		return x.UnitId
	}
	return ""
}

func (x *DailyTrackingListRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type LastStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	UnitId     string    `protobuf:"bytes,2,opt,name=unit_id,json=unitId,proto3" json:"unit_id"`
	DriverId   string    `protobuf:"bytes,3,opt,name=driver_id,json=driverId,proto3" json:"driver_id"`
	CompanyId  string    `protobuf:"bytes,4,opt,name=company_id,json=companyId,proto3" json:"company_id"`
	Location   *Location `protobuf:"bytes,5,opt,name=location,proto3" json:"location"`
	EldInfo    *EldInfo  `protobuf:"bytes,6,opt,name=eld_info,json=eldInfo,proto3" json:"eld_info"`
	CreatedAt  string    `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt  string    `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
	DebugData  string    `protobuf:"bytes,9,opt,name=debug_data,json=debugData,proto3" json:"debug_data"`
	DutyStatus string    `protobuf:"bytes,10,opt,name=duty_status,json=dutyStatus,proto3" json:"duty_status"`
}

func (x *LastStateResponse) Reset() {
	*x = LastStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracking_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LastStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LastStateResponse) ProtoMessage() {}

func (x *LastStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tracking_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LastStateResponse.ProtoReflect.Descriptor instead.
func (*LastStateResponse) Descriptor() ([]byte, []int) {
	return file_tracking_proto_rawDescGZIP(), []int{11}
}

func (x *LastStateResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LastStateResponse) GetUnitId() string {
	if x != nil {
		return x.UnitId
	}
	return ""
}

func (x *LastStateResponse) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *LastStateResponse) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *LastStateResponse) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *LastStateResponse) GetEldInfo() *EldInfo {
	if x != nil {
		return x.EldInfo
	}
	return nil
}

func (x *LastStateResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *LastStateResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *LastStateResponse) GetDebugData() string {
	if x != nil {
		return x.DebugData
	}
	return ""
}

func (x *LastStateResponse) GetDutyStatus() string {
	if x != nil {
		return x.DutyStatus
	}
	return ""
}

type LastStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitId   string `protobuf:"bytes,1,opt,name=unit_id,json=unitId,proto3" json:"unit_id"`
	DriverId string `protobuf:"bytes,2,opt,name=driver_id,json=driverId,proto3" json:"driver_id"`
}

func (x *LastStateRequest) Reset() {
	*x = LastStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracking_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LastStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LastStateRequest) ProtoMessage() {}

func (x *LastStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tracking_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LastStateRequest.ProtoReflect.Descriptor instead.
func (*LastStateRequest) Descriptor() ([]byte, []int) {
	return file_tracking_proto_rawDescGZIP(), []int{12}
}

func (x *LastStateRequest) GetUnitId() string {
	if x != nil {
		return x.UnitId
	}
	return ""
}

func (x *LastStateRequest) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

type MultipleLastStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitIds   []string `protobuf:"bytes,1,rep,name=unit_ids,json=unitIds,proto3" json:"unit_ids"`
	DriverIds []string `protobuf:"bytes,2,rep,name=driver_ids,json=driverIds,proto3" json:"driver_ids"`
	Location  string   `protobuf:"bytes,3,opt,name=location,proto3" json:"location"`
	CompanyId string   `protobuf:"bytes,4,opt,name=company_id,json=companyId,proto3" json:"company_id"`
	Date      string   `protobuf:"bytes,5,opt,name=date,proto3" json:"date"`
}

func (x *MultipleLastStateRequest) Reset() {
	*x = MultipleLastStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracking_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultipleLastStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultipleLastStateRequest) ProtoMessage() {}

func (x *MultipleLastStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tracking_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultipleLastStateRequest.ProtoReflect.Descriptor instead.
func (*MultipleLastStateRequest) Descriptor() ([]byte, []int) {
	return file_tracking_proto_rawDescGZIP(), []int{13}
}

func (x *MultipleLastStateRequest) GetUnitIds() []string {
	if x != nil {
		return x.UnitIds
	}
	return nil
}

func (x *MultipleLastStateRequest) GetDriverIds() []string {
	if x != nil {
		return x.DriverIds
	}
	return nil
}

func (x *MultipleLastStateRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *MultipleLastStateRequest) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *MultipleLastStateRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type MultipelLastStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	States []*LastStateResponse `protobuf:"bytes,1,rep,name=states,proto3" json:"states"`
}

func (x *MultipelLastStateResponse) Reset() {
	*x = MultipelLastStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracking_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultipelLastStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultipelLastStateResponse) ProtoMessage() {}

func (x *MultipelLastStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tracking_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultipelLastStateResponse.ProtoReflect.Descriptor instead.
func (*MultipelLastStateResponse) Descriptor() ([]byte, []int) {
	return file_tracking_proto_rawDescGZIP(), []int{14}
}

func (x *MultipelLastStateResponse) GetStates() []*LastStateResponse {
	if x != nil {
		return x.States
	}
	return nil
}

type ManualLastLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lat       float32 `protobuf:"fixed32,1,opt,name=lat,proto3" json:"lat"`
	Long      float32 `protobuf:"fixed32,2,opt,name=long,proto3" json:"long"`
	Address   string  `protobuf:"bytes,3,opt,name=address,proto3" json:"address"`
	State     string  `protobuf:"bytes,4,opt,name=state,proto3" json:"state"`
	DriverId  string  `protobuf:"bytes,5,opt,name=driver_id,json=driverId,proto3" json:"driver_id"`
	UnitId    string  `protobuf:"bytes,6,opt,name=unit_id,json=unitId,proto3" json:"unit_id"`
	CompanyId string  `protobuf:"bytes,7,opt,name=company_id,json=companyId,proto3" json:"company_id"`
}

func (x *ManualLastLocation) Reset() {
	*x = ManualLastLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracking_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManualLastLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManualLastLocation) ProtoMessage() {}

func (x *ManualLastLocation) ProtoReflect() protoreflect.Message {
	mi := &file_tracking_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManualLastLocation.ProtoReflect.Descriptor instead.
func (*ManualLastLocation) Descriptor() ([]byte, []int) {
	return file_tracking_proto_rawDescGZIP(), []int{15}
}

func (x *ManualLastLocation) GetLat() float32 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *ManualLastLocation) GetLong() float32 {
	if x != nil {
		return x.Long
	}
	return 0
}

func (x *ManualLastLocation) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ManualLastLocation) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *ManualLastLocation) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *ManualLastLocation) GetUnitId() string {
	if x != nil {
		return x.UnitId
	}
	return ""
}

func (x *ManualLastLocation) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

type StatusCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	On  int32 `protobuf:"varint,1,opt,name=on,proto3" json:"on"`
	Off int32 `protobuf:"varint,2,opt,name=off,proto3" json:"off"`
	Dr  int32 `protobuf:"varint,3,opt,name=dr,proto3" json:"dr"`
	Sb  int32 `protobuf:"varint,4,opt,name=sb,proto3" json:"sb"`
	Pc  int32 `protobuf:"varint,5,opt,name=pc,proto3" json:"pc"`
	Ym  int32 `protobuf:"varint,6,opt,name=ym,proto3" json:"ym"`
}

func (x *StatusCount) Reset() {
	*x = StatusCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracking_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusCount) ProtoMessage() {}

func (x *StatusCount) ProtoReflect() protoreflect.Message {
	mi := &file_tracking_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusCount.ProtoReflect.Descriptor instead.
func (*StatusCount) Descriptor() ([]byte, []int) {
	return file_tracking_proto_rawDescGZIP(), []int{16}
}

func (x *StatusCount) GetOn() int32 {
	if x != nil {
		return x.On
	}
	return 0
}

func (x *StatusCount) GetOff() int32 {
	if x != nil {
		return x.Off
	}
	return 0
}

func (x *StatusCount) GetDr() int32 {
	if x != nil {
		return x.Dr
	}
	return 0
}

func (x *StatusCount) GetSb() int32 {
	if x != nil {
		return x.Sb
	}
	return 0
}

func (x *StatusCount) GetPc() int32 {
	if x != nil {
		return x.Pc
	}
	return 0
}

func (x *StatusCount) GetYm() int32 {
	if x != nil {
		return x.Ym
	}
	return 0
}

var File_tracking_proto protoreflect.FileDescriptor

var file_tracking_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0d, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22,
	0x60, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6c,
	0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6c, 0x6f, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x6c, 0x6f, 0x6e,
	0x67, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x22, 0xe3, 0x03, 0x0a, 0x07, 0x45, 0x6c, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a,
	0x0a, 0x76, 0x69, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x76, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e,
	0x65, 0x6c, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x65, 0x6c, 0x64, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x64, 0x6f,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6f, 0x64, 0x6f,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x5f,
	0x68, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x75, 0x65, 0x6c,
	0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x66, 0x75, 0x65, 0x6c, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x64,
	0x65, 0x66, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x64, 0x65, 0x66, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x75, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x62, 0x75, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6f, 0x6f,
	0x6c, 0x61, 0x6e, 0x74, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x63, 0x6f, 0x6f, 0x6c, 0x61, 0x6e,
	0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x2d, 0x0a,
	0x12, 0x63, 0x6f, 0x6f, 0x6c, 0x61, 0x6e, 0x74, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x72, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x63, 0x6f, 0x6f, 0x6c, 0x61,
	0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x2a, 0x0a, 0x11,
	0x6f, 0x69, 0x6c, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x6f, 0x69, 0x6c, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x69, 0x6c, 0x5f,
	0x74, 0x65, 0x6d, 0x70, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x6f, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x26, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xd5, 0x01, 0x0a, 0x19, 0x54, 0x72, 0x61, 0x63,
	0x6b, 0x69, 0x6e, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x33, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x08, 0x65, 0x6c,
	0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x6c, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x65, 0x6c, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a,
	0x0a, 0x64, 0x65, 0x62, 0x75, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x64, 0x65, 0x62, 0x75, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0xac, 0x01, 0x0a, 0x15, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x3e,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x72,
	0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xc3,
	0x03, 0x0a, 0x08, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64,
	0x12, 0x33, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6f,
	0x64, 0x6f, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6f,
	0x64, 0x6f, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x75,
	0x65, 0x6c, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x66, 0x75, 0x65, 0x6c, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a,
	0x0e, 0x65, 0x6c, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x65, 0x6c, 0x64, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x69, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x69, 0x6e, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x62, 0x75, 0x67, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x62, 0x75,
	0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x22, 0x9d, 0x01, 0x0a, 0x0d, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x6e, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x6c, 0x6f, 0x6e, 0x67, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x22, 0xf3, 0x03, 0x0a, 0x04, 0x53, 0x74, 0x6f, 0x70, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x6e,
	0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x6e, 0x69,
	0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x49, 0x64, 0x12, 0x33, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x6f, 0x64, 0x6f, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x08, 0x6f, 0x64, 0x6f, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0b, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x21, 0x0a, 0x0c,
	0x66, 0x75, 0x65, 0x6c, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x66, 0x75, 0x65, 0x6c, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12,
	0x25, 0x0a, 0x0e, 0x65, 0x6c, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x65, 0x6c, 0x64, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x69, 0x6e, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x69, 0x6e, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x63, 0x6c, 0x6f, 0x73,
	0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x64, 0x65, 0x62, 0x75, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x64, 0x65, 0x62, 0x75, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x78, 0x0a, 0x14, 0x54, 0x72,
	0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x35, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x09,
	0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x29, 0x0a, 0x05, 0x73, 0x74, 0x6f,
	0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x05, 0x73,
	0x74, 0x6f, 0x70, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x19, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3a, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4c, 0x69,
	0x67, 0x68, 0x74, 0x52, 0x09, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x29,
	0x0a, 0x05, 0x73, 0x74, 0x6f, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74,
	0x6f, 0x70, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x70, 0x73, 0x22, 0x85, 0x01, 0x0a, 0x13, 0x54, 0x72,
	0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0x64, 0x0a, 0x18, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x6e,
	0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x6e, 0x69,
	0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x22, 0xde, 0x02, 0x0a, 0x11, 0x4c, 0x61, 0x73, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x49, 0x64, 0x12, 0x33, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x08, 0x65, 0x6c, 0x64, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x6c, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x07, 0x65, 0x6c, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x62, 0x75,
	0x67, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65,
	0x62, 0x75, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x75, 0x74, 0x79, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x75,
	0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x48, 0x0a, 0x10, 0x4c, 0x61, 0x73, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x6e, 0x69, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x49, 0x64, 0x22, 0xa3, 0x01, 0x0a, 0x18, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x4c,
	0x61, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x22, 0x55, 0x0a, 0x19, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x70, 0x65, 0x6c, 0x4c, 0x61, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x61, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x22,
	0xbf, 0x01, 0x0a, 0x12, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x4c, 0x61, 0x73, 0x74, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x6e, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x6c, 0x6f, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x6e, 0x69,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49,
	0x64, 0x22, 0x6f, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x6f, 0x6e,
	0x12, 0x10, 0x0a, 0x03, 0x6f, 0x66, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6f,
	0x66, 0x66, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x64, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x62, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x73, 0x62, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x70, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x79, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x79, 0x6d, 0x42, 0x18, 0x5a, 0x16, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tracking_proto_rawDescOnce sync.Once
	file_tracking_proto_rawDescData = file_tracking_proto_rawDesc
)

func file_tracking_proto_rawDescGZIP() []byte {
	file_tracking_proto_rawDescOnce.Do(func() {
		file_tracking_proto_rawDescData = protoimpl.X.CompressGZIP(file_tracking_proto_rawDescData)
	})
	return file_tracking_proto_rawDescData
}

var file_tracking_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_tracking_proto_goTypes = []any{
	(*Location)(nil),                  // 0: event_service.Location
	(*EldInfo)(nil),                   // 1: event_service.EldInfo
	(*TrackingCreateRequestItem)(nil), // 2: event_service.TrackingCreateRequestItem
	(*TrackingCreateRequest)(nil),     // 3: event_service.TrackingCreateRequest
	(*Tracking)(nil),                  // 4: event_service.Tracking
	(*TrackingLight)(nil),             // 5: event_service.TrackingLight
	(*Stop)(nil),                      // 6: event_service.Stop
	(*TrackingListResponse)(nil),      // 7: event_service.TrackingListResponse
	(*TrackingListLightResponse)(nil), // 8: event_service.TrackingListLightResponse
	(*TrackingListRequest)(nil),       // 9: event_service.TrackingListRequest
	(*DailyTrackingListRequest)(nil),  // 10: event_service.DailyTrackingListRequest
	(*LastStateResponse)(nil),         // 11: event_service.LastStateResponse
	(*LastStateRequest)(nil),          // 12: event_service.LastStateRequest
	(*MultipleLastStateRequest)(nil),  // 13: event_service.MultipleLastStateRequest
	(*MultipelLastStateResponse)(nil), // 14: event_service.MultipelLastStateResponse
	(*ManualLastLocation)(nil),        // 15: event_service.ManualLastLocation
	(*StatusCount)(nil),               // 16: event_service.StatusCount
}
var file_tracking_proto_depIdxs = []int32{
	0,  // 0: event_service.TrackingCreateRequestItem.location:type_name -> event_service.Location
	1,  // 1: event_service.TrackingCreateRequestItem.eld_info:type_name -> event_service.EldInfo
	2,  // 2: event_service.TrackingCreateRequest.items:type_name -> event_service.TrackingCreateRequestItem
	0,  // 3: event_service.Tracking.location:type_name -> event_service.Location
	0,  // 4: event_service.Stop.location:type_name -> event_service.Location
	4,  // 5: event_service.TrackingListResponse.trackings:type_name -> event_service.Tracking
	6,  // 6: event_service.TrackingListResponse.stops:type_name -> event_service.Stop
	5,  // 7: event_service.TrackingListLightResponse.trackings:type_name -> event_service.TrackingLight
	6,  // 8: event_service.TrackingListLightResponse.stops:type_name -> event_service.Stop
	0,  // 9: event_service.LastStateResponse.location:type_name -> event_service.Location
	1,  // 10: event_service.LastStateResponse.eld_info:type_name -> event_service.EldInfo
	11, // 11: event_service.MultipelLastStateResponse.states:type_name -> event_service.LastStateResponse
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_tracking_proto_init() }
func file_tracking_proto_init() {
	if File_tracking_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tracking_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Location); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tracking_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*EldInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tracking_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*TrackingCreateRequestItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tracking_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*TrackingCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tracking_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*Tracking); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tracking_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*TrackingLight); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tracking_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*Stop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tracking_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*TrackingListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tracking_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*TrackingListLightResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tracking_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*TrackingListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tracking_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*DailyTrackingListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tracking_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*LastStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tracking_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*LastStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tracking_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*MultipleLastStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tracking_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*MultipelLastStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tracking_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*ManualLastLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tracking_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*StatusCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tracking_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tracking_proto_goTypes,
		DependencyIndexes: file_tracking_proto_depIdxs,
		MessageInfos:      file_tracking_proto_msgTypes,
	}.Build()
	File_tracking_proto = out.File
	file_tracking_proto_rawDesc = nil
	file_tracking_proto_goTypes = nil
	file_tracking_proto_depIdxs = nil
}
