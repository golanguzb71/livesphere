// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.12.4
// source: unit.proto

package company_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Unit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	CompanyId         string     `protobuf:"bytes,2,opt,name=company_id,json=companyId,proto3" json:"company_id"`
	TruckNumber       string     `protobuf:"bytes,3,opt,name=truck_number,json=truckNumber,proto3" json:"truck_number"`
	MakeId            string     `protobuf:"bytes,4,opt,name=make_id,json=makeId,proto3" json:"make_id"`
	MakeName          string     `protobuf:"bytes,5,opt,name=make_name,json=makeName,proto3" json:"make_name"`
	Model             string     `protobuf:"bytes,6,opt,name=model,proto3" json:"model"`
	FuelTypeId        string     `protobuf:"bytes,8,opt,name=fuel_type_id,json=fuelTypeId,proto3" json:"fuel_type_id"`
	FuelTypeName      string     `protobuf:"bytes,9,opt,name=fuel_type_name,json=fuelTypeName,proto3" json:"fuel_type_name"`
	ManifactureYear   int32      `protobuf:"varint,10,opt,name=manifacture_year,json=manifactureYear,proto3" json:"manifacture_year"`
	LicenseNumber     string     `protobuf:"bytes,11,opt,name=license_number,json=licenseNumber,proto3" json:"license_number"`
	LicenseStateId    string     `protobuf:"bytes,12,opt,name=license_state_id,json=licenseStateId,proto3" json:"license_state_id"`
	StateName         string     `protobuf:"bytes,13,opt,name=state_name,json=stateName,proto3" json:"state_name"`
	Note              string     `protobuf:"bytes,14,opt,name=note,proto3" json:"note"`
	Vin               string     `protobuf:"bytes,15,opt,name=vin,proto3" json:"vin"`
	VinReadType       string     `protobuf:"bytes,16,opt,name=vin_read_type,json=vinReadType,proto3" json:"vin_read_type"`
	LastActivatedAt   string     `protobuf:"bytes,17,opt,name=last_activated_at,json=lastActivatedAt,proto3" json:"last_activated_at"`
	LastInactivatedAt string     `protobuf:"bytes,18,opt,name=last_inactivated_at,json=lastInactivatedAt,proto3" json:"last_inactivated_at"`
	CreatedAt         string     `protobuf:"bytes,19,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt         string     `protobuf:"bytes,20,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
	DriverId          string     `protobuf:"bytes,21,opt,name=driver_id,json=driverId,proto3" json:"driver_id"`
	DriverName        string     `protobuf:"bytes,22,opt,name=driver_name,json=driverName,proto3" json:"driver_name"`
	CoDriverId        string     `protobuf:"bytes,23,opt,name=co_driver_id,json=coDriverId,proto3" json:"co_driver_id"`
	CoDriverName      string     `protobuf:"bytes,24,opt,name=co_driver_name,json=coDriverName,proto3" json:"co_driver_name"`
	Status            string     `protobuf:"bytes,25,opt,name=status,proto3" json:"status"`
	UnitId            string     `protobuf:"bytes,26,opt,name=unit_id,json=unitId,proto3" json:"unit_id"`
	UnitName          string     `protobuf:"bytes,27,opt,name=unit_name,json=unitName,proto3" json:"unit_name"`
	LastState         *LastState `protobuf:"bytes,28,opt,name=last_state,json=lastState,proto3" json:"last_state"`
	UserId            string     `protobuf:"bytes,29,opt,name=user_id,json=userId,proto3" json:"user_id"`
	CoUserId          string     `protobuf:"bytes,30,opt,name=co_user_id,json=coUserId,proto3" json:"co_user_id"`
}

func (x *Unit) Reset() {
	*x = Unit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unit_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Unit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Unit) ProtoMessage() {}

func (x *Unit) ProtoReflect() protoreflect.Message {
	mi := &file_unit_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Unit.ProtoReflect.Descriptor instead.
func (*Unit) Descriptor() ([]byte, []int) {
	return file_unit_proto_rawDescGZIP(), []int{0}
}

func (x *Unit) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Unit) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *Unit) GetTruckNumber() string {
	if x != nil {
		return x.TruckNumber
	}
	return ""
}

func (x *Unit) GetMakeId() string {
	if x != nil {
		return x.MakeId
	}
	return ""
}

func (x *Unit) GetMakeName() string {
	if x != nil {
		return x.MakeName
	}
	return ""
}

func (x *Unit) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *Unit) GetFuelTypeId() string {
	if x != nil {
		return x.FuelTypeId
	}
	return ""
}

func (x *Unit) GetFuelTypeName() string {
	if x != nil {
		return x.FuelTypeName
	}
	return ""
}

func (x *Unit) GetManifactureYear() int32 {
	if x != nil {
		return x.ManifactureYear
	}
	return 0
}

func (x *Unit) GetLicenseNumber() string {
	if x != nil {
		return x.LicenseNumber
	}
	return ""
}

func (x *Unit) GetLicenseStateId() string {
	if x != nil {
		return x.LicenseStateId
	}
	return ""
}

func (x *Unit) GetStateName() string {
	if x != nil {
		return x.StateName
	}
	return ""
}

func (x *Unit) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *Unit) GetVin() string {
	if x != nil {
		return x.Vin
	}
	return ""
}

func (x *Unit) GetVinReadType() string {
	if x != nil {
		return x.VinReadType
	}
	return ""
}

func (x *Unit) GetLastActivatedAt() string {
	if x != nil {
		return x.LastActivatedAt
	}
	return ""
}

func (x *Unit) GetLastInactivatedAt() string {
	if x != nil {
		return x.LastInactivatedAt
	}
	return ""
}

func (x *Unit) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Unit) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Unit) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *Unit) GetDriverName() string {
	if x != nil {
		return x.DriverName
	}
	return ""
}

func (x *Unit) GetCoDriverId() string {
	if x != nil {
		return x.CoDriverId
	}
	return ""
}

func (x *Unit) GetCoDriverName() string {
	if x != nil {
		return x.CoDriverName
	}
	return ""
}

func (x *Unit) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Unit) GetUnitId() string {
	if x != nil {
		return x.UnitId
	}
	return ""
}

func (x *Unit) GetUnitName() string {
	if x != nil {
		return x.UnitName
	}
	return ""
}

func (x *Unit) GetLastState() *LastState {
	if x != nil {
		return x.LastState
	}
	return nil
}

func (x *Unit) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Unit) GetCoUserId() string {
	if x != nil {
		return x.CoUserId
	}
	return ""
}

type UnitList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32   `protobuf:"varint,1,opt,name=count,proto3" json:"count"`
	Items []*Unit `protobuf:"bytes,2,rep,name=items,proto3" json:"items"`
}

func (x *UnitList) Reset() {
	*x = UnitList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unit_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnitList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnitList) ProtoMessage() {}

func (x *UnitList) ProtoReflect() protoreflect.Message {
	mi := &file_unit_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnitList.ProtoReflect.Descriptor instead.
func (*UnitList) Descriptor() ([]byte, []int) {
	return file_unit_proto_rawDescGZIP(), []int{1}
}

func (x *UnitList) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *UnitList) GetItems() []*Unit {
	if x != nil {
		return x.Items
	}
	return nil
}

type UpdateUnitStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Status            string `protobuf:"bytes,2,opt,name=status,proto3" json:"status"`
	LastInactivatedAt string `protobuf:"bytes,3,opt,name=last_inactivated_at,json=lastInactivatedAt,proto3" json:"last_inactivated_at"`
}

func (x *UpdateUnitStatus) Reset() {
	*x = UpdateUnitStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unit_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUnitStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUnitStatus) ProtoMessage() {}

func (x *UpdateUnitStatus) ProtoReflect() protoreflect.Message {
	mi := &file_unit_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUnitStatus.ProtoReflect.Descriptor instead.
func (*UpdateUnitStatus) Descriptor() ([]byte, []int) {
	return file_unit_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateUnitStatus) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateUnitStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UpdateUnitStatus) GetLastInactivatedAt() string {
	if x != nil {
		return x.LastInactivatedAt
	}
	return ""
}

type ReactivatedStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitId []string `protobuf:"bytes,1,rep,name=unit_id,json=unitId,proto3" json:"unit_id"`
	Status string   `protobuf:"bytes,2,opt,name=status,proto3" json:"status"`
}

func (x *ReactivatedStatus) Reset() {
	*x = ReactivatedStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unit_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReactivatedStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReactivatedStatus) ProtoMessage() {}

func (x *ReactivatedStatus) ProtoReflect() protoreflect.Message {
	mi := &file_unit_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReactivatedStatus.ProtoReflect.Descriptor instead.
func (*ReactivatedStatus) Descriptor() ([]byte, []int) {
	return file_unit_proto_rawDescGZIP(), []int{3}
}

func (x *ReactivatedStatus) GetUnitId() []string {
	if x != nil {
		return x.UnitId
	}
	return nil
}

func (x *ReactivatedStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type UploadUnits struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Unit []*Unit `protobuf:"bytes,1,rep,name=unit,proto3" json:"unit"`
}

func (x *UploadUnits) Reset() {
	*x = UploadUnits{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unit_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadUnits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadUnits) ProtoMessage() {}

func (x *UploadUnits) ProtoReflect() protoreflect.Message {
	mi := &file_unit_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadUnits.ProtoReflect.Descriptor instead.
func (*UploadUnits) Descriptor() ([]byte, []int) {
	return file_unit_proto_rawDescGZIP(), []int{4}
}

func (x *UploadUnits) GetUnit() []*Unit {
	if x != nil {
		return x.Unit
	}
	return nil
}

type MultipleUnit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	CompanyId       string `protobuf:"bytes,2,opt,name=company_id,json=companyId,proto3" json:"company_id"`
	TruckNumber     string `protobuf:"bytes,3,opt,name=truck_number,json=truckNumber,proto3" json:"truck_number"`
	MakeId          string `protobuf:"bytes,4,opt,name=make_id,json=makeId,proto3" json:"make_id"`
	MakeName        string `protobuf:"bytes,5,opt,name=make_name,json=makeName,proto3" json:"make_name"`
	Model           string `protobuf:"bytes,6,opt,name=model,proto3" json:"model"`
	FuelTypeId      string `protobuf:"bytes,7,opt,name=fuel_type_id,json=fuelTypeId,proto3" json:"fuel_type_id"`
	ManufactureYear int32  `protobuf:"varint,8,opt,name=manufacture_year,json=manufactureYear,proto3" json:"manufacture_year"`
	LicenseNumber   string `protobuf:"bytes,9,opt,name=license_number,json=licenseNumber,proto3" json:"license_number"`
	LicenseStateId  string `protobuf:"bytes,10,opt,name=license_state_id,json=licenseStateId,proto3" json:"license_state_id"`
	Note            string `protobuf:"bytes,11,opt,name=note,proto3" json:"note"`
	Vin             string `protobuf:"bytes,12,opt,name=vin,proto3" json:"vin"`
	VinReadType     string `protobuf:"bytes,13,opt,name=vin_read_type,json=vinReadType,proto3" json:"vin_read_type"`
	EldVin          string `protobuf:"bytes,14,opt,name=eld_vin,json=eldVin,proto3" json:"eld_vin"`
	EldId           string `protobuf:"bytes,15,opt,name=eld_id,json=eldId,proto3" json:"eld_id"`
	EldTitle        string `protobuf:"bytes,16,opt,name=eld_title,json=eldTitle,proto3" json:"eld_title"`
	Status          string `protobuf:"bytes,17,opt,name=status,proto3" json:"status"`
}

func (x *MultipleUnit) Reset() {
	*x = MultipleUnit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unit_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultipleUnit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultipleUnit) ProtoMessage() {}

func (x *MultipleUnit) ProtoReflect() protoreflect.Message {
	mi := &file_unit_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultipleUnit.ProtoReflect.Descriptor instead.
func (*MultipleUnit) Descriptor() ([]byte, []int) {
	return file_unit_proto_rawDescGZIP(), []int{5}
}

func (x *MultipleUnit) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MultipleUnit) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *MultipleUnit) GetTruckNumber() string {
	if x != nil {
		return x.TruckNumber
	}
	return ""
}

func (x *MultipleUnit) GetMakeId() string {
	if x != nil {
		return x.MakeId
	}
	return ""
}

func (x *MultipleUnit) GetMakeName() string {
	if x != nil {
		return x.MakeName
	}
	return ""
}

func (x *MultipleUnit) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *MultipleUnit) GetFuelTypeId() string {
	if x != nil {
		return x.FuelTypeId
	}
	return ""
}

func (x *MultipleUnit) GetManufactureYear() int32 {
	if x != nil {
		return x.ManufactureYear
	}
	return 0
}

func (x *MultipleUnit) GetLicenseNumber() string {
	if x != nil {
		return x.LicenseNumber
	}
	return ""
}

func (x *MultipleUnit) GetLicenseStateId() string {
	if x != nil {
		return x.LicenseStateId
	}
	return ""
}

func (x *MultipleUnit) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *MultipleUnit) GetVin() string {
	if x != nil {
		return x.Vin
	}
	return ""
}

func (x *MultipleUnit) GetVinReadType() string {
	if x != nil {
		return x.VinReadType
	}
	return ""
}

func (x *MultipleUnit) GetEldVin() string {
	if x != nil {
		return x.EldVin
	}
	return ""
}

func (x *MultipleUnit) GetEldId() string {
	if x != nil {
		return x.EldId
	}
	return ""
}

func (x *MultipleUnit) GetEldTitle() string {
	if x != nil {
		return x.EldTitle
	}
	return ""
}

func (x *MultipleUnit) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type MultipleUnitList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32           `protobuf:"varint,1,opt,name=count,proto3" json:"count"`
	Items []*MultipleUnit `protobuf:"bytes,2,rep,name=items,proto3" json:"items"`
}

func (x *MultipleUnitList) Reset() {
	*x = MultipleUnitList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unit_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultipleUnitList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultipleUnitList) ProtoMessage() {}

func (x *MultipleUnitList) ProtoReflect() protoreflect.Message {
	mi := &file_unit_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultipleUnitList.ProtoReflect.Descriptor instead.
func (*MultipleUnitList) Descriptor() ([]byte, []int) {
	return file_unit_proto_rawDescGZIP(), []int{6}
}

func (x *MultipleUnitList) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *MultipleUnitList) GetItems() []*MultipleUnit {
	if x != nil {
		return x.Items
	}
	return nil
}

type UnitDispatchStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title"`
	Slug  string `protobuf:"bytes,3,opt,name=slug,proto3" json:"slug"`
	Color string `protobuf:"bytes,4,opt,name=color,proto3" json:"color"`
	Order int32  `protobuf:"varint,5,opt,name=order,proto3" json:"order"`
}

func (x *UnitDispatchStatus) Reset() {
	*x = UnitDispatchStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unit_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnitDispatchStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnitDispatchStatus) ProtoMessage() {}

func (x *UnitDispatchStatus) ProtoReflect() protoreflect.Message {
	mi := &file_unit_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnitDispatchStatus.ProtoReflect.Descriptor instead.
func (*UnitDispatchStatus) Descriptor() ([]byte, []int) {
	return file_unit_proto_rawDescGZIP(), []int{7}
}

func (x *UnitDispatchStatus) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UnitDispatchStatus) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UnitDispatchStatus) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *UnitDispatchStatus) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *UnitDispatchStatus) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

type UnitDispatchStatusList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32                 `protobuf:"varint,1,opt,name=count,proto3" json:"count"`
	Items []*UnitDispatchStatus `protobuf:"bytes,2,rep,name=items,proto3" json:"items"`
}

func (x *UnitDispatchStatusList) Reset() {
	*x = UnitDispatchStatusList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unit_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnitDispatchStatusList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnitDispatchStatusList) ProtoMessage() {}

func (x *UnitDispatchStatusList) ProtoReflect() protoreflect.Message {
	mi := &file_unit_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnitDispatchStatusList.ProtoReflect.Descriptor instead.
func (*UnitDispatchStatusList) Descriptor() ([]byte, []int) {
	return file_unit_proto_rawDescGZIP(), []int{8}
}

func (x *UnitDispatchStatusList) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *UnitDispatchStatusList) GetItems() []*UnitDispatchStatus {
	if x != nil {
		return x.Items
	}
	return nil
}

type UpdateUnitDispatchStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	DispatchStatusId string `protobuf:"bytes,2,opt,name=dispatch_status_id,json=dispatchStatusId,proto3" json:"dispatch_status_id"`
	ReadyAt          string `protobuf:"bytes,3,opt,name=ready_at,json=readyAt,proto3" json:"ready_at"`
	DispatchNote     string `protobuf:"bytes,4,opt,name=dispatch_note,json=dispatchNote,proto3" json:"dispatch_note"`
}

func (x *UpdateUnitDispatchStatusRequest) Reset() {
	*x = UpdateUnitDispatchStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unit_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUnitDispatchStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUnitDispatchStatusRequest) ProtoMessage() {}

func (x *UpdateUnitDispatchStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_unit_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUnitDispatchStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateUnitDispatchStatusRequest) Descriptor() ([]byte, []int) {
	return file_unit_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateUnitDispatchStatusRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateUnitDispatchStatusRequest) GetDispatchStatusId() string {
	if x != nil {
		return x.DispatchStatusId
	}
	return ""
}

func (x *UpdateUnitDispatchStatusRequest) GetReadyAt() string {
	if x != nil {
		return x.ReadyAt
	}
	return ""
}

func (x *UpdateUnitDispatchStatusRequest) GetDispatchNote() string {
	if x != nil {
		return x.DispatchNote
	}
	return ""
}

type LoadManagmentListLoadItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	LoadId     string  `protobuf:"bytes,2,opt,name=load_id,json=loadId,proto3" json:"load_id"`
	Status     string  `protobuf:"bytes,3,opt,name=status,proto3" json:"status"`
	From       string  `protobuf:"bytes,4,opt,name=from,proto3" json:"from"`
	To         string  `protobuf:"bytes,5,opt,name=to,proto3" json:"to"`
	Dispatcher string  `protobuf:"bytes,6,opt,name=dispatcher,proto3" json:"dispatcher"`
	Broker     string  `protobuf:"bytes,7,opt,name=broker,proto3" json:"broker"`
	Price      float32 `protobuf:"fixed32,8,opt,name=price,proto3" json:"price"`
	LoadedMile int32   `protobuf:"varint,9,opt,name=loaded_mile,json=loadedMile,proto3" json:"loaded_mile"`
	EmptyMile  int32   `protobuf:"varint,10,opt,name=empty_mile,json=emptyMile,proto3" json:"empty_mile"`
	FromDate   string  `protobuf:"bytes,11,opt,name=from_date,json=fromDate,proto3" json:"from_date"`
	ToDate     string  `protobuf:"bytes,12,opt,name=to_date,json=toDate,proto3" json:"to_date"`
}

func (x *LoadManagmentListLoadItem) Reset() {
	*x = LoadManagmentListLoadItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unit_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadManagmentListLoadItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadManagmentListLoadItem) ProtoMessage() {}

func (x *LoadManagmentListLoadItem) ProtoReflect() protoreflect.Message {
	mi := &file_unit_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadManagmentListLoadItem.ProtoReflect.Descriptor instead.
func (*LoadManagmentListLoadItem) Descriptor() ([]byte, []int) {
	return file_unit_proto_rawDescGZIP(), []int{10}
}

func (x *LoadManagmentListLoadItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LoadManagmentListLoadItem) GetLoadId() string {
	if x != nil {
		return x.LoadId
	}
	return ""
}

func (x *LoadManagmentListLoadItem) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *LoadManagmentListLoadItem) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *LoadManagmentListLoadItem) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *LoadManagmentListLoadItem) GetDispatcher() string {
	if x != nil {
		return x.Dispatcher
	}
	return ""
}

func (x *LoadManagmentListLoadItem) GetBroker() string {
	if x != nil {
		return x.Broker
	}
	return ""
}

func (x *LoadManagmentListLoadItem) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *LoadManagmentListLoadItem) GetLoadedMile() int32 {
	if x != nil {
		return x.LoadedMile
	}
	return 0
}

func (x *LoadManagmentListLoadItem) GetEmptyMile() int32 {
	if x != nil {
		return x.EmptyMile
	}
	return 0
}

func (x *LoadManagmentListLoadItem) GetFromDate() string {
	if x != nil {
		return x.FromDate
	}
	return ""
}

func (x *LoadManagmentListLoadItem) GetToDate() string {
	if x != nil {
		return x.ToDate
	}
	return ""
}

type LoadManagmentListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Driver           *Object                      `protobuf:"bytes,1,opt,name=driver,proto3" json:"driver"`
	Codriver         *Object                      `protobuf:"bytes,2,opt,name=codriver,proto3" json:"codriver"`
	Unit             *Object                      `protobuf:"bytes,3,opt,name=unit,proto3" json:"unit"`
	DispatchStatus   *UnitDispatchStatus          `protobuf:"bytes,4,opt,name=dispatch_status,json=dispatchStatus,proto3" json:"dispatch_status"`
	Loads            []*LoadManagmentListLoadItem `protobuf:"bytes,5,rep,name=loads,proto3" json:"loads"`
	ReadyAt          string                       `protobuf:"bytes,6,opt,name=ready_at,json=readyAt,proto3" json:"ready_at"`
	CurrentLocation  string                       `protobuf:"bytes,7,opt,name=current_location,json=currentLocation,proto3" json:"current_location"`
	CompanyId        string                       `protobuf:"bytes,8,opt,name=company_id,json=companyId,proto3" json:"company_id"`
	Rpm              float32                      `protobuf:"fixed32,9,opt,name=rpm,proto3" json:"rpm"`
	TotalPrice       float32                      `protobuf:"fixed32,10,opt,name=total_price,json=totalPrice,proto3" json:"total_price"`
	TotalLoadedMiles int32                        `protobuf:"varint,11,opt,name=total_loaded_miles,json=totalLoadedMiles,proto3" json:"total_loaded_miles"`
	TotalEmptyMiles  int32                        `protobuf:"varint,12,opt,name=total_empty_miles,json=totalEmptyMiles,proto3" json:"total_empty_miles"`
}

func (x *LoadManagmentListItem) Reset() {
	*x = LoadManagmentListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unit_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadManagmentListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadManagmentListItem) ProtoMessage() {}

func (x *LoadManagmentListItem) ProtoReflect() protoreflect.Message {
	mi := &file_unit_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadManagmentListItem.ProtoReflect.Descriptor instead.
func (*LoadManagmentListItem) Descriptor() ([]byte, []int) {
	return file_unit_proto_rawDescGZIP(), []int{11}
}

func (x *LoadManagmentListItem) GetDriver() *Object {
	if x != nil {
		return x.Driver
	}
	return nil
}

func (x *LoadManagmentListItem) GetCodriver() *Object {
	if x != nil {
		return x.Codriver
	}
	return nil
}

func (x *LoadManagmentListItem) GetUnit() *Object {
	if x != nil {
		return x.Unit
	}
	return nil
}

func (x *LoadManagmentListItem) GetDispatchStatus() *UnitDispatchStatus {
	if x != nil {
		return x.DispatchStatus
	}
	return nil
}

func (x *LoadManagmentListItem) GetLoads() []*LoadManagmentListLoadItem {
	if x != nil {
		return x.Loads
	}
	return nil
}

func (x *LoadManagmentListItem) GetReadyAt() string {
	if x != nil {
		return x.ReadyAt
	}
	return ""
}

func (x *LoadManagmentListItem) GetCurrentLocation() string {
	if x != nil {
		return x.CurrentLocation
	}
	return ""
}

func (x *LoadManagmentListItem) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *LoadManagmentListItem) GetRpm() float32 {
	if x != nil {
		return x.Rpm
	}
	return 0
}

func (x *LoadManagmentListItem) GetTotalPrice() float32 {
	if x != nil {
		return x.TotalPrice
	}
	return 0
}

func (x *LoadManagmentListItem) GetTotalLoadedMiles() int32 {
	if x != nil {
		return x.TotalLoadedMiles
	}
	return 0
}

func (x *LoadManagmentListItem) GetTotalEmptyMiles() int32 {
	if x != nil {
		return x.TotalEmptyMiles
	}
	return 0
}

type LoadManagmentList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32                    `protobuf:"varint,1,opt,name=count,proto3" json:"count"`
	Items []*LoadManagmentListItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items"`
}

func (x *LoadManagmentList) Reset() {
	*x = LoadManagmentList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unit_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadManagmentList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadManagmentList) ProtoMessage() {}

func (x *LoadManagmentList) ProtoReflect() protoreflect.Message {
	mi := &file_unit_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadManagmentList.ProtoReflect.Descriptor instead.
func (*LoadManagmentList) Descriptor() ([]byte, []int) {
	return file_unit_proto_rawDescGZIP(), []int{12}
}

func (x *LoadManagmentList) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *LoadManagmentList) GetItems() []*LoadManagmentListItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type LoadManagmentDriverInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	UserId      string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id"`
	FirstName   string `protobuf:"bytes,3,opt,name=first_name,json=firstName,proto3" json:"first_name"`
	LastName    string `protobuf:"bytes,4,opt,name=last_name,json=lastName,proto3" json:"last_name"`
	UserName    string `protobuf:"bytes,5,opt,name=user_name,json=userName,proto3" json:"user_name"`
	PhoneNumber string `protobuf:"bytes,6,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number"`
	Email       string `protobuf:"bytes,7,opt,name=email,proto3" json:"email"`
}

func (x *LoadManagmentDriverInfo) Reset() {
	*x = LoadManagmentDriverInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unit_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadManagmentDriverInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadManagmentDriverInfo) ProtoMessage() {}

func (x *LoadManagmentDriverInfo) ProtoReflect() protoreflect.Message {
	mi := &file_unit_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadManagmentDriverInfo.ProtoReflect.Descriptor instead.
func (*LoadManagmentDriverInfo) Descriptor() ([]byte, []int) {
	return file_unit_proto_rawDescGZIP(), []int{13}
}

func (x *LoadManagmentDriverInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LoadManagmentDriverInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *LoadManagmentDriverInfo) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *LoadManagmentDriverInfo) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *LoadManagmentDriverInfo) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *LoadManagmentDriverInfo) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *LoadManagmentDriverInfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type LoadManagmentSingleItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Driver          *LoadManagmentDriverInfo     `protobuf:"bytes,1,opt,name=driver,proto3" json:"driver"`
	Codriver        *LoadManagmentDriverInfo     `protobuf:"bytes,2,opt,name=codriver,proto3" json:"codriver"`
	Unit            *Object                      `protobuf:"bytes,3,opt,name=unit,proto3" json:"unit"`
	DispatchStatus  *UnitDispatchStatus          `protobuf:"bytes,4,opt,name=dispatch_status,json=dispatchStatus,proto3" json:"dispatch_status"`
	Loads           []*LoadManagmentListLoadItem `protobuf:"bytes,5,rep,name=loads,proto3" json:"loads"`
	ReadyAt         string                       `protobuf:"bytes,6,opt,name=ready_at,json=readyAt,proto3" json:"ready_at"`
	DispatchNote    string                       `protobuf:"bytes,7,opt,name=dispatch_note,json=dispatchNote,proto3" json:"dispatch_note"`
	CurrentLocation string                       `protobuf:"bytes,8,opt,name=current_location,json=currentLocation,proto3" json:"current_location"`
}

func (x *LoadManagmentSingleItem) Reset() {
	*x = LoadManagmentSingleItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unit_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadManagmentSingleItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadManagmentSingleItem) ProtoMessage() {}

func (x *LoadManagmentSingleItem) ProtoReflect() protoreflect.Message {
	mi := &file_unit_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadManagmentSingleItem.ProtoReflect.Descriptor instead.
func (*LoadManagmentSingleItem) Descriptor() ([]byte, []int) {
	return file_unit_proto_rawDescGZIP(), []int{14}
}

func (x *LoadManagmentSingleItem) GetDriver() *LoadManagmentDriverInfo {
	if x != nil {
		return x.Driver
	}
	return nil
}

func (x *LoadManagmentSingleItem) GetCodriver() *LoadManagmentDriverInfo {
	if x != nil {
		return x.Codriver
	}
	return nil
}

func (x *LoadManagmentSingleItem) GetUnit() *Object {
	if x != nil {
		return x.Unit
	}
	return nil
}

func (x *LoadManagmentSingleItem) GetDispatchStatus() *UnitDispatchStatus {
	if x != nil {
		return x.DispatchStatus
	}
	return nil
}

func (x *LoadManagmentSingleItem) GetLoads() []*LoadManagmentListLoadItem {
	if x != nil {
		return x.Loads
	}
	return nil
}

func (x *LoadManagmentSingleItem) GetReadyAt() string {
	if x != nil {
		return x.ReadyAt
	}
	return ""
}

func (x *LoadManagmentSingleItem) GetDispatchNote() string {
	if x != nil {
		return x.DispatchNote
	}
	return ""
}

func (x *LoadManagmentSingleItem) GetCurrentLocation() string {
	if x != nil {
		return x.CurrentLocation
	}
	return ""
}

type EldInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VinNumber           string  `protobuf:"bytes,1,opt,name=vin_number,json=vinNumber,proto3" json:"vin_number"`
	EldConnection       bool    `protobuf:"varint,2,opt,name=eld_connection,json=eldConnection,proto3" json:"eld_connection"`
	Speed               int32   `protobuf:"varint,3,opt,name=speed,proto3" json:"speed"`
	Odometer            float32 `protobuf:"fixed32,4,opt,name=odometer,proto3" json:"odometer"`
	EngineHours         float32 `protobuf:"fixed32,5,opt,name=engine_hours,json=engineHours,proto3" json:"engine_hours"`
	FuelPercent         int32   `protobuf:"varint,6,opt,name=fuel_percent,json=fuelPercent,proto3" json:"fuel_percent"`
	DefLevelPercent     int32   `protobuf:"varint,7,opt,name=def_level_percent,json=defLevelPercent,proto3" json:"def_level_percent"`
	Bus                 string  `protobuf:"bytes,8,opt,name=bus,proto3" json:"bus"`
	CoolantLevelPercent int32   `protobuf:"varint,9,opt,name=coolant_level_percent,json=coolantLevelPercent,proto3" json:"coolant_level_percent"`
	CoolantTemprature   int32   `protobuf:"varint,10,opt,name=coolant_temprature,json=coolantTemprature,proto3" json:"coolant_temprature"`
	OilLevelPercent     int32   `protobuf:"varint,11,opt,name=oil_level_percent,json=oilLevelPercent,proto3" json:"oil_level_percent"`
	OilTemprature       int32   `protobuf:"varint,12,opt,name=oil_temprature,json=oilTemprature,proto3" json:"oil_temprature"`
	LastUpdatedAt       int32   `protobuf:"varint,13,opt,name=last_updated_at,json=lastUpdatedAt,proto3" json:"last_updated_at"`
}

func (x *EldInfo) Reset() {
	*x = EldInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unit_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EldInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EldInfo) ProtoMessage() {}

func (x *EldInfo) ProtoReflect() protoreflect.Message {
	mi := &file_unit_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EldInfo.ProtoReflect.Descriptor instead.
func (*EldInfo) Descriptor() ([]byte, []int) {
	return file_unit_proto_rawDescGZIP(), []int{15}
}

func (x *EldInfo) GetVinNumber() string {
	if x != nil {
		return x.VinNumber
	}
	return ""
}

func (x *EldInfo) GetEldConnection() bool {
	if x != nil {
		return x.EldConnection
	}
	return false
}

func (x *EldInfo) GetSpeed() int32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *EldInfo) GetOdometer() float32 {
	if x != nil {
		return x.Odometer
	}
	return 0
}

func (x *EldInfo) GetEngineHours() float32 {
	if x != nil {
		return x.EngineHours
	}
	return 0
}

func (x *EldInfo) GetFuelPercent() int32 {
	if x != nil {
		return x.FuelPercent
	}
	return 0
}

func (x *EldInfo) GetDefLevelPercent() int32 {
	if x != nil {
		return x.DefLevelPercent
	}
	return 0
}

func (x *EldInfo) GetBus() string {
	if x != nil {
		return x.Bus
	}
	return ""
}

func (x *EldInfo) GetCoolantLevelPercent() int32 {
	if x != nil {
		return x.CoolantLevelPercent
	}
	return 0
}

func (x *EldInfo) GetCoolantTemprature() int32 {
	if x != nil {
		return x.CoolantTemprature
	}
	return 0
}

func (x *EldInfo) GetOilLevelPercent() int32 {
	if x != nil {
		return x.OilLevelPercent
	}
	return 0
}

func (x *EldInfo) GetOilTemprature() int32 {
	if x != nil {
		return x.OilTemprature
	}
	return 0
}

func (x *EldInfo) GetLastUpdatedAt() int32 {
	if x != nil {
		return x.LastUpdatedAt
	}
	return 0
}

type UnitLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lat     float32 `protobuf:"fixed32,1,opt,name=lat,proto3" json:"lat"`
	Long    float32 `protobuf:"fixed32,2,opt,name=long,proto3" json:"long"`
	Address string  `protobuf:"bytes,3,opt,name=address,proto3" json:"address"`
	State   string  `protobuf:"bytes,4,opt,name=state,proto3" json:"state"`
}

func (x *UnitLocation) Reset() {
	*x = UnitLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unit_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnitLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnitLocation) ProtoMessage() {}

func (x *UnitLocation) ProtoReflect() protoreflect.Message {
	mi := &file_unit_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnitLocation.ProtoReflect.Descriptor instead.
func (*UnitLocation) Descriptor() ([]byte, []int) {
	return file_unit_proto_rawDescGZIP(), []int{16}
}

func (x *UnitLocation) GetLat() float32 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *UnitLocation) GetLong() float32 {
	if x != nil {
		return x.Long
	}
	return 0
}

func (x *UnitLocation) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *UnitLocation) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type LastState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	UnitId     string        `protobuf:"bytes,2,opt,name=unit_id,json=unitId,proto3" json:"unit_id"`
	DriverId   string        `protobuf:"bytes,3,opt,name=driver_id,json=driverId,proto3" json:"driver_id"`
	CompanyId  string        `protobuf:"bytes,4,opt,name=company_id,json=companyId,proto3" json:"company_id"`
	Location   *UnitLocation `protobuf:"bytes,5,opt,name=location,proto3" json:"location"`
	EldInfo    *EldInfo      `protobuf:"bytes,6,opt,name=eld_info,json=eldInfo,proto3" json:"eld_info"`
	CreatedAt  string        `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt  string        `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
	DebugData  string        `protobuf:"bytes,9,opt,name=debug_data,json=debugData,proto3" json:"debug_data"`
	DutyStatus string        `protobuf:"bytes,10,opt,name=duty_status,json=dutyStatus,proto3" json:"duty_status"`
}

func (x *LastState) Reset() {
	*x = LastState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unit_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LastState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LastState) ProtoMessage() {}

func (x *LastState) ProtoReflect() protoreflect.Message {
	mi := &file_unit_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LastState.ProtoReflect.Descriptor instead.
func (*LastState) Descriptor() ([]byte, []int) {
	return file_unit_proto_rawDescGZIP(), []int{17}
}

func (x *LastState) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LastState) GetUnitId() string {
	if x != nil {
		return x.UnitId
	}
	return ""
}

func (x *LastState) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *LastState) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *LastState) GetLocation() *UnitLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *LastState) GetEldInfo() *EldInfo {
	if x != nil {
		return x.EldInfo
	}
	return nil
}

func (x *LastState) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *LastState) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *LastState) GetDebugData() string {
	if x != nil {
		return x.DebugData
	}
	return ""
}

func (x *LastState) GetDutyStatus() string {
	if x != nil {
		return x.DutyStatus
	}
	return ""
}

var File_unit_proto protoreflect.FileDescriptor

var file_unit_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x75, 0x6e, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x14, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xb1, 0x07, 0x0a, 0x04, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x74,
	0x72, 0x75, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x74, 0x72, 0x75, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x17,
	0x0a, 0x07, 0x6d, 0x61, 0x6b, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6d, 0x61, 0x6b, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x6b, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x61, 0x6b, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x20, 0x0a, 0x0c, 0x66, 0x75,
	0x65, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x66, 0x75, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e,
	0x66, 0x75, 0x65, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x75, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x6d, 0x61,
	0x6e, 0x69, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x59, 0x65, 0x61, 0x72, 0x12, 0x25, 0x0a,
	0x0e, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x69, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x76, 0x69, 0x6e, 0x12, 0x22, 0x0a, 0x0d, 0x76, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x69, 0x6e, 0x52,
	0x65, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0c, 0x63, 0x6f, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x6f, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x44, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x6e, 0x69,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x61, 0x73, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x1d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x0a, 0x63, 0x6f, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x08, 0x55, 0x6e, 0x69, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x6a, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x55, 0x6e, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x22, 0x44, 0x0a, 0x11, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x38, 0x0a, 0x0b, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x12, 0x29, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x04, 0x75, 0x6e,
	0x69, 0x74, 0x22, 0xf9, 0x03, 0x0a, 0x0c, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x55,
	0x6e, 0x69, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x72, 0x75, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x72, 0x75, 0x63, 0x6b, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x61, 0x6b, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x61, 0x6b, 0x65, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x6d, 0x61, 0x6b, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6d, 0x61, 0x6b, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x12, 0x20, 0x0a, 0x0c, 0x66, 0x75, 0x65, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x75, 0x65, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x6d,
	0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x59, 0x65, 0x61, 0x72, 0x12, 0x25,
	0x0a, 0x0e, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x6f, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x69, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x76, 0x69, 0x6e, 0x12, 0x22, 0x0a, 0x0d, 0x76, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x61,
	0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x69,
	0x6e, 0x52, 0x65, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x65, 0x6c, 0x64,
	0x5f, 0x76, 0x69, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x6c, 0x64, 0x56,
	0x69, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x65, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6c, 0x64,
	0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6c,
	0x64, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x5d,
	0x0a, 0x10, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70,
	0x6c, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x7a, 0x0a,
	0x12, 0x55, 0x6e, 0x69, 0x74, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x69, 0x0a, 0x16, 0x55, 0x6e, 0x69,
	0x74, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x44,
	0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x22, 0x9f, 0x01, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x6e, 0x69, 0x74, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x64, 0x69, 0x73, 0x70,
	0x61, 0x74, 0x63, 0x68, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x64, 0x79, 0x5f,
	0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x61, 0x64, 0x79, 0x41,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6e, 0x6f,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74,
	0x63, 0x68, 0x4e, 0x6f, 0x74, 0x65, 0x22, 0xc4, 0x02, 0x0a, 0x19, 0x4c, 0x6f, 0x61, 0x64, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x61, 0x64,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x73,
	0x70, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64,
	0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x72, 0x6f,
	0x6b, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x72, 0x6f, 0x6b, 0x65,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x61, 0x64, 0x65,
	0x64, 0x5f, 0x6d, 0x69, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6c, 0x6f,
	0x61, 0x64, 0x65, 0x64, 0x4d, 0x69, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x5f, 0x6d, 0x69, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x4d, 0x69, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x6f, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x44, 0x61, 0x74, 0x65, 0x22, 0xac, 0x04,
	0x0a, 0x15, 0x4c, 0x6f, 0x61, 0x64, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x2f, 0x0a, 0x06, 0x64, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x06, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x12, 0x33, 0x0a, 0x08, 0x63, 0x6f, 0x64, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x12, 0x2b, 0x0a,
	0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x12, 0x4c, 0x0a, 0x0f, 0x64, 0x69,
	0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74,
	0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74,
	0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x40, 0x0a, 0x05, 0x6c, 0x6f, 0x61, 0x64,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x61, 0x64, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x05, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65,
	0x61, 0x64, 0x79, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65,
	0x61, 0x64, 0x79, 0x41, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x72, 0x70, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x72, 0x70,
	0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6c, 0x6f, 0x61, 0x64,
	0x65, 0x64, 0x5f, 0x6d, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x4d, 0x69, 0x6c, 0x65, 0x73,
	0x12, 0x2a, 0x0a, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x5f,
	0x6d, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x4d, 0x69, 0x6c, 0x65, 0x73, 0x22, 0x67, 0x0a, 0x11,
	0x4c, 0x6f, 0x61, 0x64, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xd4, 0x01, 0x0a, 0x17, 0x4c, 0x6f, 0x61, 0x64, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0xc9, 0x03, 0x0a,
	0x17, 0x4c, 0x6f, 0x61, 0x64, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x69,
	0x6e, 0x67, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x40, 0x0a, 0x06, 0x64, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x06, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x12, 0x44, 0x0a, 0x08, 0x63, 0x6f,
	0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c,
	0x6f, 0x61, 0x64, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x63, 0x6f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x12, 0x2b, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x12, 0x4c, 0x0a,
	0x0f, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x44, 0x69, 0x73,
	0x70, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0e, 0x64, 0x69, 0x73,
	0x70, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x40, 0x0a, 0x05, 0x6c,
	0x6f, 0x61, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x6f, 0x61,
	0x64, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f,
	0x61, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x12, 0x19, 0x0a,
	0x08, 0x72, 0x65, 0x61, 0x64, 0x79, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x72, 0x65, 0x61, 0x64, 0x79, 0x41, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x70,
	0x61, 0x74, 0x63, 0x68, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x29, 0x0a,
	0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xe3, 0x03, 0x0a, 0x07, 0x45, 0x6c, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x69, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x69, 0x6e, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6c, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x65, 0x6c, 0x64,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70,
	0x65, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x64, 0x6f, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x08, 0x6f, 0x64, 0x6f, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0b, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x12,
	0x21, 0x0a, 0x0c, 0x66, 0x75, 0x65, 0x6c, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x66, 0x75, 0x65, 0x6c, 0x50, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x64, 0x65, 0x66, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f,
	0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x64,
	0x65, 0x66, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x62, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x62, 0x75, 0x73,
	0x12, 0x32, 0x0a, 0x15, 0x63, 0x6f, 0x6f, 0x6c, 0x61, 0x6e, 0x74, 0x5f, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x13, 0x63, 0x6f, 0x6f, 0x6c, 0x61, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x50, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x6f, 0x6f, 0x6c, 0x61, 0x6e, 0x74, 0x5f,
	0x74, 0x65, 0x6d, 0x70, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x11, 0x63, 0x6f, 0x6f, 0x6c, 0x61, 0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x72, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x6f, 0x69, 0x6c, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f,
	0x6f, 0x69, 0x6c, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12,
	0x25, 0x0a, 0x0e, 0x6f, 0x69, 0x6c, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x72, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6f, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70,
	0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x64,
	0x0a, 0x0c, 0x55, 0x6e, 0x69, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10,
	0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x6c, 0x61, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04,
	0x6c, 0x6f, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x22, 0xde, 0x02, 0x0a, 0x09, 0x4c, 0x61, 0x73, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x6e, 0x69, 0x74,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x08, 0x65, 0x6c, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x6c, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07,
	0x65, 0x6c, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x62, 0x75, 0x67, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x62, 0x75, 0x67,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x75, 0x74, 0x79, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x75, 0x74, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x1a, 0x5a, 0x18, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_unit_proto_rawDescOnce sync.Once
	file_unit_proto_rawDescData = file_unit_proto_rawDesc
)

func file_unit_proto_rawDescGZIP() []byte {
	file_unit_proto_rawDescOnce.Do(func() {
		file_unit_proto_rawDescData = protoimpl.X.CompressGZIP(file_unit_proto_rawDescData)
	})
	return file_unit_proto_rawDescData
}

var file_unit_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_unit_proto_goTypes = []any{
	(*Unit)(nil),                            // 0: company_service.Unit
	(*UnitList)(nil),                        // 1: company_service.UnitList
	(*UpdateUnitStatus)(nil),                // 2: company_service.UpdateUnitStatus
	(*ReactivatedStatus)(nil),               // 3: company_service.ReactivatedStatus
	(*UploadUnits)(nil),                     // 4: company_service.UploadUnits
	(*MultipleUnit)(nil),                    // 5: company_service.MultipleUnit
	(*MultipleUnitList)(nil),                // 6: company_service.MultipleUnitList
	(*UnitDispatchStatus)(nil),              // 7: company_service.UnitDispatchStatus
	(*UnitDispatchStatusList)(nil),          // 8: company_service.UnitDispatchStatusList
	(*UpdateUnitDispatchStatusRequest)(nil), // 9: company_service.UpdateUnitDispatchStatusRequest
	(*LoadManagmentListLoadItem)(nil),       // 10: company_service.LoadManagmentListLoadItem
	(*LoadManagmentListItem)(nil),           // 11: company_service.LoadManagmentListItem
	(*LoadManagmentList)(nil),               // 12: company_service.LoadManagmentList
	(*LoadManagmentDriverInfo)(nil),         // 13: company_service.LoadManagmentDriverInfo
	(*LoadManagmentSingleItem)(nil),         // 14: company_service.LoadManagmentSingleItem
	(*EldInfo)(nil),                         // 15: company_service.EldInfo
	(*UnitLocation)(nil),                    // 16: company_service.UnitLocation
	(*LastState)(nil),                       // 17: company_service.LastState
	(*Object)(nil),                          // 18: company_service.Object
}
var file_unit_proto_depIdxs = []int32{
	17, // 0: company_service.Unit.last_state:type_name -> company_service.LastState
	0,  // 1: company_service.UnitList.items:type_name -> company_service.Unit
	0,  // 2: company_service.UploadUnits.unit:type_name -> company_service.Unit
	5,  // 3: company_service.MultipleUnitList.items:type_name -> company_service.MultipleUnit
	7,  // 4: company_service.UnitDispatchStatusList.items:type_name -> company_service.UnitDispatchStatus
	18, // 5: company_service.LoadManagmentListItem.driver:type_name -> company_service.Object
	18, // 6: company_service.LoadManagmentListItem.codriver:type_name -> company_service.Object
	18, // 7: company_service.LoadManagmentListItem.unit:type_name -> company_service.Object
	7,  // 8: company_service.LoadManagmentListItem.dispatch_status:type_name -> company_service.UnitDispatchStatus
	10, // 9: company_service.LoadManagmentListItem.loads:type_name -> company_service.LoadManagmentListLoadItem
	11, // 10: company_service.LoadManagmentList.items:type_name -> company_service.LoadManagmentListItem
	13, // 11: company_service.LoadManagmentSingleItem.driver:type_name -> company_service.LoadManagmentDriverInfo
	13, // 12: company_service.LoadManagmentSingleItem.codriver:type_name -> company_service.LoadManagmentDriverInfo
	18, // 13: company_service.LoadManagmentSingleItem.unit:type_name -> company_service.Object
	7,  // 14: company_service.LoadManagmentSingleItem.dispatch_status:type_name -> company_service.UnitDispatchStatus
	10, // 15: company_service.LoadManagmentSingleItem.loads:type_name -> company_service.LoadManagmentListLoadItem
	16, // 16: company_service.LastState.location:type_name -> company_service.UnitLocation
	15, // 17: company_service.LastState.eld_info:type_name -> company_service.EldInfo
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_unit_proto_init() }
func file_unit_proto_init() {
	if File_unit_proto != nil {
		return
	}
	file_company_models_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_unit_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Unit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unit_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*UnitList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unit_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateUnitStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unit_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ReactivatedStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unit_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*UploadUnits); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unit_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*MultipleUnit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unit_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*MultipleUnitList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unit_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*UnitDispatchStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unit_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*UnitDispatchStatusList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unit_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateUnitDispatchStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unit_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*LoadManagmentListLoadItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unit_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*LoadManagmentListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unit_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*LoadManagmentList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unit_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*LoadManagmentDriverInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unit_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*LoadManagmentSingleItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unit_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*EldInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unit_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*UnitLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unit_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*LastState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_unit_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_unit_proto_goTypes,
		DependencyIndexes: file_unit_proto_depIdxs,
		MessageInfos:      file_unit_proto_msgTypes,
	}.Build()
	File_unit_proto = out.File
	file_unit_proto_rawDesc = nil
	file_unit_proto_goTypes = nil
	file_unit_proto_depIdxs = nil
}
