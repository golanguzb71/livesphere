// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.21.12
// source: lead.proto

package core_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Lead
type Lead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title"`
}

func (x *Lead) Reset() {
	*x = Lead{}
	mi := &file_lead_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Lead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lead) ProtoMessage() {}

func (x *Lead) ProtoReflect() protoreflect.Message {
	mi := &file_lead_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lead.ProtoReflect.Descriptor instead.
func (*Lead) Descriptor() ([]byte, []int) {
	return file_lead_proto_rawDescGZIP(), []int{0}
}

func (x *Lead) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Lead) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type GetLeadListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Leads        []*Section `protobuf:"bytes,1,rep,name=leads,proto3" json:"leads"`
	Expectations []*Section `protobuf:"bytes,2,rep,name=expectations,proto3" json:"expectations"`
	Sets         []*Section `protobuf:"bytes,3,rep,name=sets,proto3" json:"sets"`
}

func (x *GetLeadListResponse) Reset() {
	*x = GetLeadListResponse{}
	mi := &file_lead_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLeadListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeadListResponse) ProtoMessage() {}

func (x *GetLeadListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lead_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeadListResponse.ProtoReflect.Descriptor instead.
func (*GetLeadListResponse) Descriptor() ([]byte, []int) {
	return file_lead_proto_rawDescGZIP(), []int{1}
}

func (x *GetLeadListResponse) GetLeads() []*Section {
	if x != nil {
		return x.Leads
	}
	return nil
}

func (x *GetLeadListResponse) GetExpectations() []*Section {
	if x != nil {
		return x.Expectations
	}
	return nil
}

func (x *GetLeadListResponse) GetSets() []*Section {
	if x != nil {
		return x.Sets
	}
	return nil
}

type Section struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string      `protobuf:"bytes,5,opt,name=id,proto3" json:"id"`
	Name       string      `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	LeadsCount int32       `protobuf:"varint,2,opt,name=leadsCount,proto3" json:"leadsCount"`
	Leads      []*LeadUser `protobuf:"bytes,3,rep,name=leads,proto3" json:"leads"`
	Type       string      `protobuf:"bytes,4,opt,name=type,proto3" json:"type"`
}

func (x *Section) Reset() {
	*x = Section{}
	mi := &file_lead_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Section) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Section) ProtoMessage() {}

func (x *Section) ProtoReflect() protoreflect.Message {
	mi := &file_lead_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Section.ProtoReflect.Descriptor instead.
func (*Section) Descriptor() ([]byte, []int) {
	return file_lead_proto_rawDescGZIP(), []int{2}
}

func (x *Section) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Section) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Section) GetLeadsCount() int32 {
	if x != nil {
		return x.LeadsCount
	}
	return 0
}

func (x *Section) GetLeads() []*LeadUser {
	if x != nil {
		return x.Leads
	}
	return nil
}

func (x *Section) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type LeadUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Name        string `protobuf:"bytes,5,opt,name=name,proto3" json:"name"`
	Comment     string `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment"`
	CreatedAt   string `protobuf:"bytes,3,opt,name=createdAt,proto3" json:"createdAt"`
	PhoneNumber string `protobuf:"bytes,4,opt,name=phoneNumber,proto3" json:"phoneNumber"`
}

func (x *LeadUser) Reset() {
	*x = LeadUser{}
	mi := &file_lead_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeadUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeadUser) ProtoMessage() {}

func (x *LeadUser) ProtoReflect() protoreflect.Message {
	mi := &file_lead_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeadUser.ProtoReflect.Descriptor instead.
func (*LeadUser) Descriptor() ([]byte, []int) {
	return file_lead_proto_rawDescGZIP(), []int{3}
}

func (x *LeadUser) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LeadUser) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LeadUser) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *LeadUser) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *LeadUser) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

type GetListSectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sections []*DynamicSection `protobuf:"bytes,1,rep,name=sections,proto3" json:"sections"`
}

func (x *GetListSectionResponse) Reset() {
	*x = GetListSectionResponse{}
	mi := &file_lead_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetListSectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListSectionResponse) ProtoMessage() {}

func (x *GetListSectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lead_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListSectionResponse.ProtoReflect.Descriptor instead.
func (*GetListSectionResponse) Descriptor() ([]byte, []int) {
	return file_lead_proto_rawDescGZIP(), []int{4}
}

func (x *GetListSectionResponse) GetSections() []*DynamicSection {
	if x != nil {
		return x.Sections
	}
	return nil
}

type DynamicSection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
}

func (x *DynamicSection) Reset() {
	*x = DynamicSection{}
	mi := &file_lead_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DynamicSection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicSection) ProtoMessage() {}

func (x *DynamicSection) ProtoReflect() protoreflect.Message {
	mi := &file_lead_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicSection.ProtoReflect.Descriptor instead.
func (*DynamicSection) Descriptor() ([]byte, []int) {
	return file_lead_proto_rawDescGZIP(), []int{5}
}

func (x *DynamicSection) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DynamicSection) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetLeadReportsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeadConversion          []*LeadConversion          `protobuf:"bytes,1,rep,name=leadConversion,proto3" json:"leadConversion"`
	LeadConversionForSource []*LeadConversionForSource `protobuf:"bytes,2,rep,name=leadConversionForSource,proto3" json:"leadConversionForSource"`
}

func (x *GetLeadReportsResponse) Reset() {
	*x = GetLeadReportsResponse{}
	mi := &file_lead_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLeadReportsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeadReportsResponse) ProtoMessage() {}

func (x *GetLeadReportsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lead_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeadReportsResponse.ProtoReflect.Descriptor instead.
func (*GetLeadReportsResponse) Descriptor() ([]byte, []int) {
	return file_lead_proto_rawDescGZIP(), []int{6}
}

func (x *GetLeadReportsResponse) GetLeadConversion() []*LeadConversion {
	if x != nil {
		return x.LeadConversion
	}
	return nil
}

func (x *GetLeadReportsResponse) GetLeadConversionForSource() []*LeadConversionForSource {
	if x != nil {
		return x.LeadConversionForSource
	}
	return nil
}

type LeadConversion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversionDate string `protobuf:"bytes,1,opt,name=conversionDate,proto3" json:"conversionDate"`
	LeadCount      int32  `protobuf:"varint,2,opt,name=lead_count,json=leadCount,proto3" json:"lead_count"`
}

func (x *LeadConversion) Reset() {
	*x = LeadConversion{}
	mi := &file_lead_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeadConversion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeadConversion) ProtoMessage() {}

func (x *LeadConversion) ProtoReflect() protoreflect.Message {
	mi := &file_lead_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeadConversion.ProtoReflect.Descriptor instead.
func (*LeadConversion) Descriptor() ([]byte, []int) {
	return file_lead_proto_rawDescGZIP(), []int{7}
}

func (x *LeadConversion) GetConversionDate() string {
	if x != nil {
		return x.ConversionDate
	}
	return ""
}

func (x *LeadConversion) GetLeadCount() int32 {
	if x != nil {
		return x.LeadCount
	}
	return 0
}

type LeadConversionForSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source     string `protobuf:"bytes,1,opt,name=source,proto3" json:"source"`
	LeadsCount int32  `protobuf:"varint,2,opt,name=leads_count,json=leadsCount,proto3" json:"leads_count"`
}

func (x *LeadConversionForSource) Reset() {
	*x = LeadConversionForSource{}
	mi := &file_lead_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeadConversionForSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeadConversionForSource) ProtoMessage() {}

func (x *LeadConversionForSource) ProtoReflect() protoreflect.Message {
	mi := &file_lead_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeadConversionForSource.ProtoReflect.Descriptor instead.
func (*LeadConversionForSource) Descriptor() ([]byte, []int) {
	return file_lead_proto_rawDescGZIP(), []int{8}
}

func (x *LeadConversionForSource) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *LeadConversionForSource) GetLeadsCount() int32 {
	if x != nil {
		return x.LeadsCount
	}
	return 0
}

type GetActiveLeadCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActiveLeadCount int32 `protobuf:"varint,1,opt,name=activeLeadCount,proto3" json:"activeLeadCount"`
}

func (x *GetActiveLeadCountResponse) Reset() {
	*x = GetActiveLeadCountResponse{}
	mi := &file_lead_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetActiveLeadCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveLeadCountResponse) ProtoMessage() {}

func (x *GetActiveLeadCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lead_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActiveLeadCountResponse.ProtoReflect.Descriptor instead.
func (*GetActiveLeadCountResponse) Descriptor() ([]byte, []int) {
	return file_lead_proto_rawDescGZIP(), []int{9}
}

func (x *GetActiveLeadCountResponse) GetActiveLeadCount() int32 {
	if x != nil {
		return x.ActiveLeadCount
	}
	return 0
}

// Expect
type Expect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title"`
}

func (x *Expect) Reset() {
	*x = Expect{}
	mi := &file_lead_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Expect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Expect) ProtoMessage() {}

func (x *Expect) ProtoReflect() protoreflect.Message {
	mi := &file_lead_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Expect.ProtoReflect.Descriptor instead.
func (*Expect) Descriptor() ([]byte, []int) {
	return file_lead_proto_rawDescGZIP(), []int{10}
}

func (x *Expect) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Expect) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

// Set
type Set struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Title           string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title"`
	CourseId        string   `protobuf:"bytes,3,opt,name=courseId,proto3" json:"courseId"`
	TeacherId       string   `protobuf:"bytes,4,opt,name=teacherId,proto3" json:"teacherId"`
	DateType        string   `protobuf:"bytes,5,opt,name=dateType,proto3" json:"dateType"`
	Date            []string `protobuf:"bytes,6,rep,name=date,proto3" json:"date"`
	LessonStartTime string   `protobuf:"bytes,7,opt,name=lessonStartTime,proto3" json:"lessonStartTime"`
}

func (x *Set) Reset() {
	*x = Set{}
	mi := &file_lead_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Set) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Set) ProtoMessage() {}

func (x *Set) ProtoReflect() protoreflect.Message {
	mi := &file_lead_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Set.ProtoReflect.Descriptor instead.
func (*Set) Descriptor() ([]byte, []int) {
	return file_lead_proto_rawDescGZIP(), []int{11}
}

func (x *Set) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Set) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Set) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *Set) GetTeacherId() string {
	if x != nil {
		return x.TeacherId
	}
	return ""
}

func (x *Set) GetDateType() string {
	if x != nil {
		return x.DateType
	}
	return ""
}

func (x *Set) GetDate() []string {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *Set) GetLessonStartTime() string {
	if x != nil {
		return x.LessonStartTime
	}
	return ""
}

type ChangeToGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	RoomId    string   `protobuf:"bytes,2,opt,name=roomId,proto3" json:"roomId"`
	CourseId  string   `protobuf:"bytes,3,opt,name=courseId,proto3" json:"courseId"`
	TeacherId string   `protobuf:"bytes,4,opt,name=teacherId,proto3" json:"teacherId"`
	DateType  string   `protobuf:"bytes,5,opt,name=dateType,proto3" json:"dateType"`
	Days      []string `protobuf:"bytes,6,rep,name=days,proto3" json:"days"`
	StartTime string   `protobuf:"bytes,7,opt,name=startTime,proto3" json:"startTime"`
	StartDate string   `protobuf:"bytes,8,opt,name=startDate,proto3" json:"startDate"`
	EndDate   string   `protobuf:"bytes,9,opt,name=end_date,json=endDate,proto3" json:"end_date"`
	SetId     string   `protobuf:"bytes,10,opt,name=setId,proto3" json:"setId"`
}

func (x *ChangeToGroupRequest) Reset() {
	*x = ChangeToGroupRequest{}
	mi := &file_lead_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeToGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeToGroupRequest) ProtoMessage() {}

func (x *ChangeToGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lead_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeToGroupRequest.ProtoReflect.Descriptor instead.
func (*ChangeToGroupRequest) Descriptor() ([]byte, []int) {
	return file_lead_proto_rawDescGZIP(), []int{12}
}

func (x *ChangeToGroupRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ChangeToGroupRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *ChangeToGroupRequest) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *ChangeToGroupRequest) GetTeacherId() string {
	if x != nil {
		return x.TeacherId
	}
	return ""
}

func (x *ChangeToGroupRequest) GetDateType() string {
	if x != nil {
		return x.DateType
	}
	return ""
}

func (x *ChangeToGroupRequest) GetDays() []string {
	if x != nil {
		return x.Days
	}
	return nil
}

func (x *ChangeToGroupRequest) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *ChangeToGroupRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *ChangeToGroupRequest) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *ChangeToGroupRequest) GetSetId() string {
	if x != nil {
		return x.SetId
	}
	return ""
}

type SetDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title           string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title"`
	TeacherId       string   `protobuf:"bytes,2,opt,name=teacherId,proto3" json:"teacherId"`
	TeacherName     string   `protobuf:"bytes,3,opt,name=teacherName,proto3" json:"teacherName"`
	CourseId        string   `protobuf:"bytes,4,opt,name=courseId,proto3" json:"courseId"`
	CourseName      string   `protobuf:"bytes,5,opt,name=courseName,proto3" json:"courseName"`
	DateType        string   `protobuf:"bytes,6,opt,name=dateType,proto3" json:"dateType"`
	Dates           []string `protobuf:"bytes,7,rep,name=dates,proto3" json:"dates"`
	LessonStartTime string   `protobuf:"bytes,8,opt,name=lessonStartTime,proto3" json:"lessonStartTime"`
}

func (x *SetDataResponse) Reset() {
	*x = SetDataResponse{}
	mi := &file_lead_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDataResponse) ProtoMessage() {}

func (x *SetDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lead_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDataResponse.ProtoReflect.Descriptor instead.
func (*SetDataResponse) Descriptor() ([]byte, []int) {
	return file_lead_proto_rawDescGZIP(), []int{13}
}

func (x *SetDataResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SetDataResponse) GetTeacherId() string {
	if x != nil {
		return x.TeacherId
	}
	return ""
}

func (x *SetDataResponse) GetTeacherName() string {
	if x != nil {
		return x.TeacherName
	}
	return ""
}

func (x *SetDataResponse) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *SetDataResponse) GetCourseName() string {
	if x != nil {
		return x.CourseName
	}
	return ""
}

func (x *SetDataResponse) GetDateType() string {
	if x != nil {
		return x.DateType
	}
	return ""
}

func (x *SetDataResponse) GetDates() []string {
	if x != nil {
		return x.Dates
	}
	return nil
}

func (x *SetDataResponse) GetLessonStartTime() string {
	if x != nil {
		return x.LessonStartTime
	}
	return ""
}

// Lead Data
type LeadData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Type        string `protobuf:"bytes,2,opt,name=type,proto3" json:"type"`
	SectionId   string `protobuf:"bytes,3,opt,name=sectionId,proto3" json:"sectionId"`
	Name        string `protobuf:"bytes,4,opt,name=name,proto3" json:"name"`
	PhoneNumber string `protobuf:"bytes,5,opt,name=phoneNumber,proto3" json:"phoneNumber"`
	Comment     string `protobuf:"bytes,6,opt,name=comment,proto3" json:"comment"`
}

func (x *LeadData) Reset() {
	*x = LeadData{}
	mi := &file_lead_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeadData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeadData) ProtoMessage() {}

func (x *LeadData) ProtoReflect() protoreflect.Message {
	mi := &file_lead_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeadData.ProtoReflect.Descriptor instead.
func (*LeadData) Descriptor() ([]byte, []int) {
	return file_lead_proto_rawDescGZIP(), []int{14}
}

func (x *LeadData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LeadData) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *LeadData) GetSectionId() string {
	if x != nil {
		return x.SectionId
	}
	return ""
}

func (x *LeadData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LeadData) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *LeadData) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type ChangeLeadPlaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeadDataId string                 `protobuf:"bytes,1,opt,name=leadDataId,proto3" json:"leadDataId"`
	ChangedSet *ChangeLeadDataRequest `protobuf:"bytes,2,opt,name=changedSet,proto3" json:"changedSet"`
}

func (x *ChangeLeadPlaceRequest) Reset() {
	*x = ChangeLeadPlaceRequest{}
	mi := &file_lead_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeLeadPlaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeLeadPlaceRequest) ProtoMessage() {}

func (x *ChangeLeadPlaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lead_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeLeadPlaceRequest.ProtoReflect.Descriptor instead.
func (*ChangeLeadPlaceRequest) Descriptor() ([]byte, []int) {
	return file_lead_proto_rawDescGZIP(), []int{15}
}

func (x *ChangeLeadPlaceRequest) GetLeadDataId() string {
	if x != nil {
		return x.LeadDataId
	}
	return ""
}

func (x *ChangeLeadPlaceRequest) GetChangedSet() *ChangeLeadDataRequest {
	if x != nil {
		return x.ChangedSet
	}
	return nil
}

type ChangeLeadDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	SectionType string `protobuf:"bytes,2,opt,name=sectionType,proto3" json:"sectionType"`
}

func (x *ChangeLeadDataRequest) Reset() {
	*x = ChangeLeadDataRequest{}
	mi := &file_lead_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeLeadDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeLeadDataRequest) ProtoMessage() {}

func (x *ChangeLeadDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lead_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeLeadDataRequest.ProtoReflect.Descriptor instead.
func (*ChangeLeadDataRequest) Descriptor() ([]byte, []int) {
	return file_lead_proto_rawDescGZIP(), []int{16}
}

func (x *ChangeLeadDataRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChangeLeadDataRequest) GetSectionType() string {
	if x != nil {
		return x.SectionType
	}
	return ""
}

var File_lead_proto protoreflect.FileDescriptor

var file_lead_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x6c, 0x65, 0x61, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x63, 0x6f,
	0x72, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x2c, 0x0a, 0x04, 0x4c, 0x65,
	0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0xa8, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x4c, 0x65, 0x61, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2b, 0x0a, 0x05, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x12, 0x39, 0x0a,
	0x0c, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x65, 0x78, 0x70, 0x65,
	0x63, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x29, 0x0a, 0x04, 0x73, 0x65, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x73,
	0x65, 0x74, 0x73, 0x22, 0x8f, 0x01, 0x0a, 0x07, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x05, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x6c, 0x65, 0x61, 0x64,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x88, 0x01, 0x0a, 0x08, 0x4c, 0x65, 0x61, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x22, 0x52, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x08, 0x73, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x73, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0x34, 0x0a, 0x0e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x53,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xbf, 0x01, 0x0a, 0x16, 0x47,
	0x65, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0e, 0x6c, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x65, 0x61,
	0x64, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x6c, 0x65, 0x61,
	0x64, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x5f, 0x0a, 0x17, 0x6c,
	0x65, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x65, 0x61, 0x64,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x17, 0x6c, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x57, 0x0a, 0x0e,
	0x4c, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x26,
	0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x65, 0x61, 0x64, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6c, 0x65, 0x61, 0x64,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x52, 0x0a, 0x17, 0x4c, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x65, 0x61, 0x64,
	0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6c,
	0x65, 0x61, 0x64, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x46, 0x0a, 0x1a, 0x47, 0x65, 0x74,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x4c, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x2e, 0x0a, 0x06, 0x45, 0x78, 0x70, 0x65, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x22, 0xbf, 0x01, 0x0a, 0x03, 0x53, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x6c, 0x65, 0x73,
	0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x99, 0x02, 0x0a, 0x14, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x6f,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x79, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61,
	0x79, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x65, 0x74,
	0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x65, 0x74, 0x49, 0x64, 0x22,
	0xff, 0x01, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x65, 0x61,
	0x63, 0x68, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65,
	0x61, 0x63, 0x68, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x61, 0x63, 0x68,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x65,
	0x61, 0x63, 0x68, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x05, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x6c, 0x65, 0x73, 0x73, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0x9c, 0x01, 0x0a, 0x08, 0x4c, 0x65, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x22, 0x7d, 0x0a, 0x16, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x50, 0x6c,
	0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x65,
	0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6c, 0x65, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x0a, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x64, 0x53, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x53, 0x65, 0x74, 0x22,
	0x49, 0x0a, 0x15, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x17, 0x5a, 0x15, 0x67, 0x65,
	0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_lead_proto_rawDescOnce sync.Once
	file_lead_proto_rawDescData = file_lead_proto_rawDesc
)

func file_lead_proto_rawDescGZIP() []byte {
	file_lead_proto_rawDescOnce.Do(func() {
		file_lead_proto_rawDescData = protoimpl.X.CompressGZIP(file_lead_proto_rawDescData)
	})
	return file_lead_proto_rawDescData
}

var file_lead_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_lead_proto_goTypes = []any{
	(*Lead)(nil),                       // 0: core_service.Lead
	(*GetLeadListResponse)(nil),        // 1: core_service.GetLeadListResponse
	(*Section)(nil),                    // 2: core_service.Section
	(*LeadUser)(nil),                   // 3: core_service.LeadUser
	(*GetListSectionResponse)(nil),     // 4: core_service.GetListSectionResponse
	(*DynamicSection)(nil),             // 5: core_service.DynamicSection
	(*GetLeadReportsResponse)(nil),     // 6: core_service.GetLeadReportsResponse
	(*LeadConversion)(nil),             // 7: core_service.LeadConversion
	(*LeadConversionForSource)(nil),    // 8: core_service.LeadConversionForSource
	(*GetActiveLeadCountResponse)(nil), // 9: core_service.GetActiveLeadCountResponse
	(*Expect)(nil),                     // 10: core_service.Expect
	(*Set)(nil),                        // 11: core_service.Set
	(*ChangeToGroupRequest)(nil),       // 12: core_service.ChangeToGroupRequest
	(*SetDataResponse)(nil),            // 13: core_service.SetDataResponse
	(*LeadData)(nil),                   // 14: core_service.LeadData
	(*ChangeLeadPlaceRequest)(nil),     // 15: core_service.ChangeLeadPlaceRequest
	(*ChangeLeadDataRequest)(nil),      // 16: core_service.ChangeLeadDataRequest
}
var file_lead_proto_depIdxs = []int32{
	2,  // 0: core_service.GetLeadListResponse.leads:type_name -> core_service.Section
	2,  // 1: core_service.GetLeadListResponse.expectations:type_name -> core_service.Section
	2,  // 2: core_service.GetLeadListResponse.sets:type_name -> core_service.Section
	3,  // 3: core_service.Section.leads:type_name -> core_service.LeadUser
	5,  // 4: core_service.GetListSectionResponse.sections:type_name -> core_service.DynamicSection
	7,  // 5: core_service.GetLeadReportsResponse.leadConversion:type_name -> core_service.LeadConversion
	8,  // 6: core_service.GetLeadReportsResponse.leadConversionForSource:type_name -> core_service.LeadConversionForSource
	16, // 7: core_service.ChangeLeadPlaceRequest.changedSet:type_name -> core_service.ChangeLeadDataRequest
	8,  // [8:8] is the sub-list for method output_type
	8,  // [8:8] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_lead_proto_init() }
func file_lead_proto_init() {
	if File_lead_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_lead_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_lead_proto_goTypes,
		DependencyIndexes: file_lead_proto_depIdxs,
		MessageInfos:      file_lead_proto_msgTypes,
	}.Build()
	File_lead_proto = out.File
	file_lead_proto_rawDesc = nil
	file_lead_proto_goTypes = nil
	file_lead_proto_depIdxs = nil
}
